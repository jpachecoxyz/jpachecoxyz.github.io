<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wayland on (λ jpachecoxyz)</title>
    <link>//localhost:1313/tags/wayland/</link>
    <description>Recent content in Wayland on (λ jpachecoxyz)</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Made in emacs for (λ jpachecoxyz)</copyright>
    <lastBuildDate>Sun, 22 Sep 2024 12:49:00 -0500</lastBuildDate>
    <atom:link href="//localhost:1313/tags/wayland/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pymetrics</title>
      <link>//localhost:1313/posts/pymetrics/</link>
      <pubDate>Wed, 04 Sep 2024 02:44:00 -0500</pubDate>
      <guid>//localhost:1313/posts/pymetrics/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;&#xA;&lt;p&gt;Managing and monitoring the performance of industrial machines is critical to ensuring minimal downtime and maximizing productivity. The need for an effective system to store and analyze maintenance data became apparent when the maintenance manager contacted me with a specific problem. They struggled to create KPI graphs because they lacked a proper system to store all the necessary data. To address this challenge, I developed a maintenance log app that efficiently tracks and records machine failures, repair time, shutdown time, and the technicians involved in the repairs. The data is stored in a CSV format, making it easy to create KPI (Key Performance Indicator) graphs in Excel for analysis.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ellama, a emacs AI helper.</title>
      <link>//localhost:1313/posts/ellama/</link>
      <pubDate>Sun, 22 Sep 2024 12:49:00 -0500</pubDate>
      <guid>//localhost:1313/posts/ellama/</guid>
      <description>&lt;h2 id=&#34;installation-of-ollama-dot&#34;&gt;Installation of Ollama.&lt;/h2&gt;&#xA;&lt;p&gt;In my case, I installed &lt;code&gt;ollama&lt;/code&gt; from my package manager, although you can install it using the following code:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -fsSL https://ollama.com/install.sh &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Once &lt;code&gt;ollama&lt;/code&gt; is installed, you should add it to your startup. In my case, I do it from the init of &lt;code&gt;hyprland&lt;/code&gt;, but it will depend on whether you use &lt;code&gt;.xinitrc&lt;/code&gt; or something else. It should be launched as follows:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ollama serve&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;installing-a-model-dot&#34;&gt;Installing a model.&lt;/h2&gt;&#xA;&lt;p&gt;To use Ollama, we need to download a model. A model is basically who you will be talking to when making a query. In the case of &lt;code&gt;ellama&lt;/code&gt;, they suggest installing &lt;code&gt;zephyr&lt;/code&gt; as the model, so we need to install it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Share Screen in Hyprland.</title>
      <link>//localhost:1313/posts/share-screen-hyprland/</link>
      <pubDate>Wed, 04 Sep 2024 02:44:00 -0500</pubDate>
      <guid>//localhost:1313/posts/share-screen-hyprland/</guid>
      <description>&lt;h2 id=&#34;the-issue&#34;&gt;The issue:&lt;/h2&gt;&#xA;&lt;p&gt;We have a telegram group, in where we share emacs things and some other related to programming and linux in the most part of the time. So one day one of the members says that we can share screens and have a kind of podcast and talk about our environment configurations (sway/hyprland), so I was very curious about it so he invite me to another telegram group, this telegram group is for his YouTube channel, for test my hyprland configuration because he told me that he has troubles in his hyprland configuration using manjaro.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
