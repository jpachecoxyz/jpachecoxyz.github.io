<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tecnology on (λ jpachecoxyz)</title>
    <link>//localhost:1313/tags/tecnology/</link>
    <description>Recent content in Tecnology on (λ jpachecoxyz)</description>
    <generator>Hugo</generator>
    <language>en</language>
    <copyright>Made in emacs for (λ jpachecoxyz)</copyright>
    <lastBuildDate>Sat, 08 Feb 2025 18:57:00 -0600</lastBuildDate>
    <atom:link href="//localhost:1313/tags/tecnology/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Pymetrics</title>
      <link>//localhost:1313/posts/pymetrics/</link>
      <pubDate>Wed, 04 Sep 2024 02:44:00 -0500</pubDate>
      <guid>//localhost:1313/posts/pymetrics/</guid>
      <description>&lt;h2 id=&#34;overview&#34;&gt;Overview&lt;/h2&gt;&#xA;&lt;p&gt;Managing and monitoring the performance of industrial machines is critical to ensuring minimal downtime and maximizing productivity. The need for an effective system to store and analyze maintenance data became apparent when the maintenance manager contacted me with a specific problem. They struggled to create KPI graphs because they lacked a proper system to store all the necessary data. To address this challenge, I developed a maintenance log app that efficiently tracks and records machine failures, repair time, shutdown time, and the technicians involved in the repairs. The data is stored in a CSV format, making it easy to create KPI (Key Performance Indicator) graphs in Excel for analysis.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Back to Void Linux</title>
      <link>//localhost:1313/posts/back-to-void-linux/</link>
      <pubDate>Sat, 08 Feb 2025 18:57:00 -0600</pubDate>
      <guid>//localhost:1313/posts/back-to-void-linux/</guid>
      <description>&lt;h2 id=&#34;always-return-to-the-place-that-you-where-happy-dot&#34;&gt;Always return to the place that you where happy.&lt;/h2&gt;&#xA;&lt;p&gt;A long time ago (actually no more than 2 years) I was using &lt;code&gt;void linux&lt;/code&gt;, it was a very good time, but for some reasons I change it for &lt;code&gt;venom linux&lt;/code&gt;, &lt;code&gt;nixOS&lt;/code&gt;, &lt;code&gt;guix linux&lt;/code&gt; and others, to testing and learning within those linux distributions, but I always have a lack of something&amp;hellip;&lt;/p&gt;&#xA;&lt;p&gt;As much I like and enjoy &lt;code&gt;nixOS&lt;/code&gt;, I always have problems, specially with the libraries and includes directories. I know that was only a small thing, but you know&amp;hellip;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Recover Windows BOOT</title>
      <link>//localhost:1313/posts/recover-windows-boot/</link>
      <pubDate>Sat, 18 Jan 2025 17:24:00 -0600</pubDate>
      <guid>//localhost:1313/posts/recover-windows-boot/</guid>
      <description>&lt;p&gt;This guide is suggested when you accidentally format the boot partition while installing a new OS, wiping out the Windows bootloader in the process. This has happened to me on more than one occasion, which is why I decided to document it.&lt;/p&gt;&#xA;&lt;p&gt;It has also happened when the Windows bootloader is deleted. The following steps are solely for copying the Windows boot files using the ISO onto the partition without having to reformat it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Should I use GNU/guix?</title>
      <link>//localhost:1313/posts/should-i-use-gnu-guix/</link>
      <pubDate>Tue, 14 Jan 2025 20:03:00 -0600</pubDate>
      <guid>//localhost:1313/posts/should-i-use-gnu-guix/</guid>
      <description>&lt;h2 id=&#34;what-is-gnu-guix-dot&#34;&gt;What is GNU/guix.&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;GNU/Guix&lt;/strong&gt; is a functional package manager and a complete operating system distribution, part of the GNU Project. It is designed to provide a reliable and customizable environment for managing software and configurations.&lt;/p&gt;&#xA;&lt;p&gt;It is basically &lt;code&gt;NixOS&lt;/code&gt; but instead of using nix it uses &lt;code&gt;Schem Common Lisp&lt;/code&gt; as interpreter.&lt;/p&gt;&#xA;&lt;h2 id=&#34;why-use-gnu-guix&#34;&gt;Why Use GNU Guix?&lt;/h2&gt;&#xA;&lt;p&gt;Freedom and transparency in software management.&#xA;Avoids common issues like dependency hell or broken systems due to upgrades.&#xA;Ideal for developers, researchers, and system administrators who value reproducibility and control.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Ellama, a emacs AI helper.</title>
      <link>//localhost:1313/posts/ellama/</link>
      <pubDate>Sun, 22 Sep 2024 12:49:00 -0500</pubDate>
      <guid>//localhost:1313/posts/ellama/</guid>
      <description>&lt;h2 id=&#34;installation-of-ollama-dot&#34;&gt;Installation of Ollama.&lt;/h2&gt;&#xA;&lt;p&gt;In my case, I installed &lt;code&gt;ollama&lt;/code&gt; from my package manager, although you can install it using the following code:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;curl -fsSL https://ollama.com/install.sh &lt;span class=&#34;p&#34;&gt;|&lt;/span&gt; sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;p&gt;Once &lt;code&gt;ollama&lt;/code&gt; is installed, you should add it to your startup. In my case, I do it from the init of &lt;code&gt;hyprland&lt;/code&gt;, but it will depend on whether you use &lt;code&gt;.xinitrc&lt;/code&gt; or something else. It should be launched as follows:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;ollama serve&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;installing-a-model-dot&#34;&gt;Installing a model.&lt;/h2&gt;&#xA;&lt;p&gt;To use Ollama, we need to download a model. A model is basically who you will be talking to when making a query. In the case of &lt;code&gt;ellama&lt;/code&gt;, they suggest installing &lt;code&gt;zephyr&lt;/code&gt; as the model, so we need to install it.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Basics of HUGO</title>
      <link>//localhost:1313/posts/basics-of-hugo/</link>
      <pubDate>Wed, 04 Sep 2024 03:32:00 -0500</pubDate>
      <guid>//localhost:1313/posts/basics-of-hugo/</guid>
      <description>&lt;h2 id=&#34;introduction&#34;&gt;Introduction&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;Hugo is one of the most popular open-source static site generators. With its amazing speed and flexibility, Hugo makes building websites fun again.&amp;rdquo;&lt;/p&gt;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;&#xA;&lt;p&gt;Hugo is multi platform, so the installation depends on what SO do you use, in this example I Show how to install in &lt;code&gt;Arch-linux&lt;/code&gt; because it&amp;rsquo;s easy.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;div class=&#34;chroma&#34;&gt;&#xA;&lt;table class=&#34;lntable&#34;&gt;&lt;tr&gt;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code&gt;&lt;span class=&#34;lnt&#34;&gt;1&#xA;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&#xA;&lt;td class=&#34;lntd&#34;&gt;&#xA;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;sudo pacman -S hugo&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&#xA;&lt;/div&gt;&#xA;&lt;/div&gt;&lt;h2 id=&#34;creating-a-new-site&#34;&gt;Creating a New Site&lt;/h2&gt;&#xA;&lt;h3 id=&#34;initialize-a-new-hugo-site&#34;&gt;Initialize a New Hugo Site&lt;/h3&gt;&#xA;&lt;p&gt;This is the command in order to create a hugo site,&lt;/p&gt;</description>
    </item>
    <item>
      <title>Emacs vs Neovim</title>
      <link>//localhost:1313/posts/emacs-vs-nvim/</link>
      <pubDate>Wed, 04 Sep 2024 02:44:00 -0500</pubDate>
      <guid>//localhost:1313/posts/emacs-vs-nvim/</guid>
      <description>&lt;h2 id=&#34;neovim-for-programming&#34;&gt;Neovim for Programming&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Efficiency and Speed: Neovim is highly efficient for programming due to its lightweight nature and focus on speed. It starts up faster and can handle large files with ease.&lt;/li&gt;&#xA;&lt;li&gt;Plugin Ecosystem: Neovim has a rich plugin ecosystem, especially for programming-related tasks. Plugins like nvim-treesitter for syntax highlighting, telescope.nvim for fuzzy finding, and coc.nvim or nvim-lspconfig for Language Server Protocol (LSP) support make it a powerful choice for coding.&lt;/li&gt;&#xA;&lt;li&gt;Modal Editing: Neovim, like Vim, uses modal editing, which can be very powerful for code navigation and manipulation once you get used to it.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;emacs-for-writing-posts--and-beyond&#34;&gt;Emacs for Writing Posts (and Beyond)&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Org-mode: Emacs shines when it comes to writing and organizing content, especially with Org-mode. Org-mode is exceptional for note-taking, task management, and writing posts or documentation. It allows you to export your work to various formats (HTML, PDF, LaTeX, etc.) easily.&lt;/li&gt;&#xA;&lt;li&gt;Extensibility: Emacs is known for its extensibility. You can customize it to be a full-fledged IDE, text editor, or writing tool. For blog posts, especially if you&amp;rsquo;re using something like ox-hugo, Emacs can be incredibly powerful.&lt;/li&gt;&#xA;&lt;li&gt;Unified Environment: If you prefer an environment where you can write, code, manage tasks, and do everything in one place, Emacs offers that. It&amp;rsquo;s an all-in-one tool where you can manage your entire workflow.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;which-should-you-choose&#34;&gt;Which Should You Choose?&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;For Programming: Neovim might be better if you want a focused, fast, and highly efficient tool purely for coding. It&amp;rsquo;s especially suitable if you prefer modal editing and a streamlined environment.&lt;/p&gt;</description>
    </item>
    <item>
      <title>How I made my blog with emacs and hugo</title>
      <link>//localhost:1313/posts/my-blog-in-emacs/</link>
      <pubDate>Wed, 04 Sep 2024 02:44:00 -0500</pubDate>
      <guid>//localhost:1313/posts/my-blog-in-emacs/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;&#xA;&lt;p&gt;I have been using emacs most of the time for writting, and of course when I started to make my blog I have been use it (emacs) since of it. In the beginig when I start writing I was using some scripts and tips from &lt;a href=&#34;https://systemcrafters.net/&#34;&gt;system crafters&lt;/a&gt; he use htmlize and some &lt;em&gt;lisp&lt;/em&gt; scripting. It was ok but then I have been watching some &lt;a href=&#34;https://www.youtube.com/@LukeSmithxyz&#34;&gt;lukesmith&lt;/a&gt; videos and see this &lt;a href=&#34;https://www.youtube.com/watch?v=jAXKSKb3etk&amp;amp;pp=ygUOaHVnbyBsdWtlc21pdGg%3D&#34;&gt;video&lt;/a&gt; about him switching to &lt;code&gt;HUGO&lt;/code&gt;, so I decided to check &lt;code&gt;HUGO&lt;/code&gt; too.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Install Telega in NixOS - Emacs.</title>
      <link>//localhost:1313/posts/install-telega-nixos/</link>
      <pubDate>Wed, 04 Sep 2024 02:44:00 -0500</pubDate>
      <guid>//localhost:1313/posts/install-telega-nixos/</guid>
      <description>&lt;h2 id=&#34;what-is-telega&#34;&gt;What is telega?.&lt;/h2&gt;&#xA;&lt;p&gt;According to the &lt;a href=&#34;https://github.com/zevlg/telega.el&#34;&gt;Github&lt;/a&gt; repository:&lt;/p&gt;&#xA;&lt;dl&gt;&#xA;&lt;dt&gt;Telega&lt;/dt&gt;&#xA;&lt;dd&gt;telega.el is full featured unofficial client for Telegram platform for GNU Emacs.&lt;/dd&gt;&#xA;&lt;/dl&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;As you may know, my main OS, at this time (2024-08-21) is &lt;code&gt;NixOS&lt;/code&gt;, so I was trying to install &lt;code&gt;Telega&lt;/code&gt; in my emacs, but as you can imagine, the file system hierarchy don&amp;rsquo;t works &amp;ldquo;normal&amp;rdquo; in &lt;code&gt;NixOS&lt;/code&gt;, so is a little tricky set up the environment to actually make &lt;code&gt;Telega&lt;/code&gt; works.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Search tool in your HUGO website.</title>
      <link>//localhost:1313/posts/search-tool-hugo/</link>
      <pubDate>Wed, 04 Sep 2024 02:44:00 -0500</pubDate>
      <guid>//localhost:1313/posts/search-tool-hugo/</guid>
      <description>&lt;p&gt;As websites grow, incorporating a search feature becomes increasingly crucial. However, implementing search functionality can be challenging on a statically generated site since there&amp;rsquo;s no server-side component to handle the search. Instead, the search must be performed on the client side within the browser using JavaScript.&lt;/p&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;!-- raw HTML omitted --&gt;&#xA;&lt;figure&gt;&lt;img src=&#34;//localhost:1313/images/posts/hugo-search/jpacheco-search.png&#34;&#xA;    alt=&#34;Figure 1: This is how my web looks.&#34;&gt;&lt;figcaption&gt;&#xA;      &lt;p&gt;&lt;!-- raw HTML omitted --&gt;Figure 1: &lt;!-- raw HTML omitted --&gt;This is how my web looks.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
