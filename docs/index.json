[{"content":"Overview Managing and monitoring the performance of industrial machines is critical to ensuring minimal downtime and maximizing productivity. The need for an effective system to store and analyze maintenance data became apparent when the maintenance manager contacted me with a specific problem. They struggled to create KPI graphs because they lacked a proper system to store all the necessary data. To address this challenge, I developed a maintenance log app that efficiently tracks and records machine failures, repair time, shutdown time, and the technicians involved in the repairs. The data is stored in a CSV format, making it easy to create KPI (Key Performance Indicator) graphs in Excel for analysis.\nFeatures Machine Failure Logging Record each instance of machine failure with timestamps. Repair Time Tracking Log the start and end times of repairs to calculate the total repair duration. Shutdown Time Monitoring Track the total time a machine is down due to failures and repairs. Technician Assignment Assign technicians to specific repair tasks and log their involvement. How the Project Started The project began when the maintenance manager reached out to me with a significant issue: they were unable to create KPI graphs due to the lack of a system for storing maintenance data. Understanding the importance of this data for monitoring machine performance, I developed the maintenance log app in Python to solve the problem. By providing a structured way to capture and store all relevant data, the app enables easy analysis and KPI generation.\nBenefits The maintenance log app provides several key benefits:\nEnhanced Data Management: All data is stored in a standardized CSV format, which can be easily imported into Excel for further analysis. Improved KPI Tracking: By analyzing the recorded data, maintenance teams can generate KPI graphs in Excel to monitor performance metrics such as Mean Time to Repair (MTTR) and Mean Time Between Failures (MTBF). Informed Decision-Making: The insights gained from the KPI graphs help in making informed decisions to improve machine reliability and reduce downtime. Technical Details The app is built using Python, leveraging its robust data handling capabilities. The CSV format is chosen for its simplicity and compatibility with various data analysis tools.\nUsage The application is designed to be user-friendly, requiring minimal input from the maintenance team. The data entry process is streamlined, allowing technicians to quickly log failures and repairs without interrupting their workflow.\nFigure 1: Pymetrics in light-mode.\nHow to Get Started You can access the source code and instructions for setting up the maintenance log app on GitHub: Pymetrics Repository.\nConclusion This maintenance log app is a practical tool for any industrial maintenance team looking to improve their machine monitoring and maintenance processes. By providing a clear view of machine performance through KPI graphs, it helps teams identify trends and make data-driven decisions. The app was born out of a real-world need, and I\u0026rsquo;m excited to see how it can help others in similar situations.\nFeel free to explore the project and contribute to its development by visiting the Pymetrics Repository on GitHub.\n","permalink":"//localhost:1313/posts/pymetrics/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eManaging and monitoring the performance of industrial machines is critical to ensuring minimal downtime and maximizing productivity. The need for an effective system to store and analyze maintenance data became apparent when the maintenance manager contacted me with a specific problem. They struggled to create KPI graphs because they lacked a proper system to store all the necessary data. To address this challenge, I developed a maintenance log app that efficiently tracks and records machine failures, repair time, shutdown time, and the technicians involved in the repairs. The data is stored in a CSV format, making it easy to create KPI (Key Performance Indicator) graphs in Excel for analysis.\u003c/p\u003e","title":"Pymetrics"},{"content":"Always return to the place that you where happy. A long time ago (actually no more than 2 years) I was using void linux, it was a very good time, but for some reasons I change it for venom linux, nixOS, guix linux and others, to testing and learning within those linux distributions, but I always have a lack of something\u0026hellip;\nAs much I like and enjoy nixOS, I always have problems, specially with the libraries and includes directories. I know that was only a small thing, but you know\u0026hellip;\nGuix was very interesting too, but same history as in nix.\nVenom linux was a such great too, amazing distro, excellent administrators. But I don\u0026rsquo;t have the time to being compiling things, or fixing some issues within an update.\nConclusions. So for that I will try void-linux again. I installed it again, the installation was smoothly, I use my script, so I install it very fast, and now I\u0026rsquo;m now in this amazing distro, I think that I\u0026rsquo;m going to be here at least a few years, because this distro its minimal, the community is amazing, and of course the stability is great. I encourage you to at least try void or some variants, it\u0026rsquo;s just amazing.\n","permalink":"//localhost:1313/posts/back-to-void-linux/","summary":"\u003ch2 id=\"always-return-to-the-place-that-you-where-happy-dot\"\u003eAlways return to the place that you where happy.\u003c/h2\u003e\n\u003cp\u003eA long time ago (actually no more than 2 years) I was using \u003ccode\u003evoid linux\u003c/code\u003e, it was a very good time, but for some reasons I change it for \u003ccode\u003evenom linux\u003c/code\u003e, \u003ccode\u003enixOS\u003c/code\u003e, \u003ccode\u003eguix linux\u003c/code\u003e and others, to testing and learning within those linux distributions, but I always have a lack of something\u0026hellip;\u003c/p\u003e\n\u003cp\u003eAs much I like and enjoy \u003ccode\u003enixOS\u003c/code\u003e, I always have problems, specially with the libraries and includes directories. I know that was only a small thing, but you know\u0026hellip;\u003c/p\u003e","title":"Back to Void Linux"},{"content":"This guide is suggested when you accidentally format the boot partition while installing a new OS, wiping out the Windows bootloader in the process. This has happened to me on more than one occasion, which is why I decided to document it.\nIt has also happened when the Windows bootloader is deleted. The following steps are solely for copying the Windows boot files using the ISO onto the partition without having to reformat it.\nSelect the disk. 1 list disk sel disk # Select the boot partition. List the partitions, select the FAT32 partition, and assign a letter to it.\n1 list vol sel vol # assign letter z: Load Windows boot files. 1 bcdboot c:\\windows /s z: /f all That\u0026rsquo;s it! Simply restart, boot into the main OS, run os-prober, and execute update-grub to add the boot entry to grub.\n","permalink":"//localhost:1313/posts/recover-windows-boot/","summary":"\u003cp\u003eThis guide is suggested when you accidentally format the boot partition while installing a new OS, wiping out the Windows bootloader in the process. This has happened to me on more than one occasion, which is why I decided to document it.\u003c/p\u003e\n\u003cp\u003eIt has also happened when the Windows bootloader is deleted. The following steps are solely for copying the Windows boot files using the ISO onto the partition without having to reformat it.\u003c/p\u003e","title":"Recover Windows BOOT"},{"content":"Dual Boot Configuration in Guix Linux Setting up a dual-boot system in Guix Linux involves configuring the GRUB bootloader to recognize both Guix and your secondary operating system. Here\u0026rsquo;s how you can configure the bootloader step-by-step.\nDefault Bootloader Configuration The default bootloader configuration for Guix Linux is straightforward. Here\u0026rsquo;s an example:\n1 2 3 4 (bootloader (bootloader-configuration (bootloader grub-efi-bootloader) (targets (list \u0026#34;/boot/efi\u0026#34;)) (keyboard-layout keyboard-layout))) grub-efi-bootloader: Specifies the GRUB bootloader in EFI mode. targets: Points to the EFI System Partition (ESP), usually mounted at `/boot/efi`. keyboard-layout: Configures the keyboard layout used in GRUB. Adding a GRUB Entry for Dual Boot To enable dual boot with Windows 11 (or another operating system), you need to add a custom entry to the GRUB configuration. Here’s how:\n1 2 3 4 5 6 7 8 9 10 11 (bootloader (bootloader-configuration (bootloader grub-efi-bootloader) (targets (list \u0026#34;/boot/efi\u0026#34;)) (keyboard-layout keyboard-layout) ;; Add a menu entry for Windows 11 (menu-entries (list (menu-entry (label \u0026#34;Windows 11\u0026#34;) (device (uuid \u0026#34;65A0-06CA\u0026#34; \u0026#39;fat32)) ; UUID of the boot partition (chain-loader \u0026#34;/EFI/Microsoft/Boot/bootmgfw.efi\u0026#34;)))))) Key Components menu-entries: Adds a custom menu entry for the GRUB boot menu. menu-entry: label: The name displayed in the GRUB menu (e.g., \u0026ldquo;Windows 11\u0026rdquo;). device: Specifies the UUID of the boot partition where Windows is installed. Replace \u0026quot;65A0-06CA\u0026quot; with the UUID of your Windows EFI partition. chain-loader: Points to the Windows EFI bootloader (bootmgfw.efi), usually located in /EFI/Microsoft/Boot/. Finding the UUID of the Boot Partition To find the UUID of the Windows boot partition, run the following command:\n1 lsblk -o NAME,FSTYPE,UUID,MOUNTPOINT Locate the partition with the `fat32` filesystem type and note its UUID.\nApplying the Configuration After modifying your config.scm, reconfigure your system to apply the changes:\n1 sudo guix system reconfigure /path/to/config.scm Testing the Dual Boot Setup Reboot your system. In the GRUB menu, you should see an entry labeled \u0026ldquo;Windows 11\u0026rdquo; alongside your Guix Linux entry. Select \u0026ldquo;Windows 11\u0026rdquo; to boot into Windows. Tips for Troubleshooting If the Windows entry doesn’t appear, double-check the UUID of the boot partition. Make sure your BIOS/UEFI settings allow booting in EFI mode. Ensure the Windows EFI bootloader (bootmgfw.efi) exists in the specified path. This setup ensures that both Guix Linux and Windows 11 are easily accessible via the GRUB menu, providing a seamless dual-boot experience. If you have any questions or run into issues, feel free to ask!\n","permalink":"//localhost:1313/posts/dualboot-in-guix-linux/","summary":"\u003ch2 id=\"dual-boot-configuration-in-guix-linux\"\u003eDual Boot Configuration in Guix Linux\u003c/h2\u003e\n\u003cp\u003eSetting up a dual-boot system in Guix Linux involves configuring the GRUB bootloader to recognize both Guix and your secondary operating system. Here\u0026rsquo;s how you can configure the bootloader step-by-step.\u003c/p\u003e\n\u003ch3 id=\"default-bootloader-configuration\"\u003eDefault Bootloader Configuration\u003c/h3\u003e\n\u003cp\u003eThe default bootloader configuration for Guix Linux is straightforward. Here\u0026rsquo;s an example:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e4\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-scheme\" data-lang=\"scheme\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003ebootloader\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003ebootloader-configuration\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003ebootloader\u003c/span\u003e \u003cspan class=\"nv\"\u003egrub-efi-bootloader\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003etargets\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elist \u003c/span\u003e\u003cspan class=\"s\"\u003e\u0026#34;/boot/efi\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003ekeyboard-layout\u003c/span\u003e \u003cspan class=\"nv\"\u003ekeyboard-layout\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cul\u003e\n\u003cli\u003e\u003cstrong\u003egrub-efi-bootloader\u003c/strong\u003e: Specifies the GRUB bootloader in EFI mode.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003etargets\u003c/strong\u003e: Points to the EFI System Partition (ESP), usually mounted at `/boot/efi`.\u003c/li\u003e\n\u003cli\u003e\u003cstrong\u003ekeyboard-layout\u003c/strong\u003e: Configures the keyboard layout used in GRUB.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3 id=\"adding-a-grub-entry-for-dual-boot\"\u003eAdding a GRUB Entry for Dual Boot\u003c/h3\u003e\n\u003cp\u003eTo enable dual boot with Windows 11 (or another operating system), you need to add a custom entry to the GRUB configuration. Here’s how:\u003c/p\u003e","title":"Dualboot in guix linux"},{"content":"About. The script install.sh will do a couple of actions to try to make the GNU/guix installation more friendly, so, basically this README.org file will tangle the script, the power of emacs of course. So, while I was working in this \u0026ldquo;note\u0026rdquo; file, then I realized that I can use emacs and make a script.\nDownload and burn the iso. I use the systemcrafter ISO.\n1 sudo dd status=progress if=guix-installer-202106150234.iso of=/dev/sdb \u0026amp;\u0026amp; sync Install the OS. Now with the Guix iso. Boot your laptop in it, and follow the instructions to install the OS, just ignore the warnings about the libre software, And stop in the part that you actually going to start the installation, and open another TTY:\n1 Ctrl + Alt + f2 The script itself \u0026ldquo;Automated\u0026rdquo;: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 set -e set -o pipefail log_error() { echo \u0026#34;$(date \u0026#39;+%Y-%m-%d %H:%M:%S\u0026#39;) - ERROR: $1\u0026#34; \u0026gt;\u0026amp;2 exit 1 } log() { echo \u0026#34;$(date \u0026#39;+%Y-%m-%d %H:%M:%S\u0026#39;) - $1\u0026#34; } log \u0026#34;Starting cow-store service...\u0026#34; \u0026amp;\u0026amp; herd start cow-store /mnt || log_error \u0026#34;Failed to start cow-store.\u0026#34; log \u0026#34;Copying channels.scm...\u0026#34; \u0026amp;\u0026amp; cp /etc/channels.scm /mnt/etc \u0026amp;\u0026amp; chmod +w /mnt/etc/channels.scm || log_error \u0026#34;Failed to copy or modify channels.scm.\u0026#34; log \u0026#34;Copying config.scm...\u0026#34; \u0026amp;\u0026amp; cp /mnt/etc/config.scm ./config.scm || log_error \u0026#34;Failed to copy config.scm.\u0026#34; log \u0026#34;Adding nongnu modules and linux kernel to config.scm ...\u0026#34; if ! grep -q \u0026#39;(use-modules (gnu) (nongnu packages linux))\u0026#39; ./config.scm; then sed -i \u0026#39;s/(use-modules (gnu))/(use-modules (gnu) (nongnu packages linux))/\u0026#39; ./config.scm || log_error \u0026#34;Failed to add (nongnu packages linux) to use-modules.\u0026#34; else log \u0026#34;Line \u0026#39;(use-modules (gnu) (nongnu packages linux))\u0026#39; already exists. Skipping.\u0026#34; fi if ! grep -q \u0026#39;(kernel linux)\u0026#39; ./config.scm; then sed -i \u0026#39;/(operating-system/a\\ (kernel linux)\\ (firmware (list linux-firmware))\u0026#39; ./config.scm || log_error \u0026#34;Failed to add kernel and firmware configurations.\u0026#34; else log \u0026#34;Kernel and firmware configurations already exist. Skipping.\u0026#34; fi log \u0026#34;Copying updated config.scm back to /mnt/etc...\u0026#34; \u0026amp;\u0026amp; cp ./config.scm /mnt/etc/config.scm || log_error \u0026#34;Failed to copy updated config.scm back to /mnt/etc.\u0026#34; log \u0026#34;Initializing system with guix time-machine...\u0026#34; \u0026amp;\u0026amp; guix time-machine -C /mnt/etc/channels.scm -- system init /mnt/etc/config.scm /mnt || log_error \u0026#34;System initialization failed.\u0026#34; log \u0026#34;Clean this folder...\u0026#34; \u0026amp;\u0026amp; rm ./config.scm log \u0026#34;Script completed successfully.\u0026#34; References: SystemCrafters Complete guide. ","permalink":"//localhost:1313/posts/guix-installer/","summary":"\u003ch2 id=\"about-dot\"\u003eAbout.\u003c/h2\u003e\n\u003cp\u003eThe script \u003ccode\u003einstall.sh\u003c/code\u003e will do a couple of actions to try to make the GNU/guix installation more friendly, so, basically this \u003ccode\u003eREADME.org\u003c/code\u003e file will tangle the script, the power of emacs of course. So, while I was working in this \u0026ldquo;note\u0026rdquo; file, then I realized that I can use emacs and make a script.\u003c/p\u003e\n\u003ch2 id=\"download-and-burn-the-iso-dot\"\u003eDownload and burn the iso.\u003c/h2\u003e\n\u003cp\u003eI use the systemcrafter \u003ca href=\"https://github.com/SystemCrafters/guix-installer\"\u003eISO.\u003c/a\u003e\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo dd \u003cspan class=\"nv\"\u003estatus\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eprogress \u003cspan class=\"k\"\u003eif\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003eguix-installer-202106150234.iso \u003cspan class=\"nv\"\u003eof\u003c/span\u003e\u003cspan class=\"o\"\u003e=\u003c/span\u003e/dev/sdb \u003cspan class=\"o\"\u003e\u0026amp;\u0026amp;\u003c/span\u003e sync\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003ch2 id=\"install-the-os-dot\"\u003eInstall the OS.\u003c/h2\u003e\n\u003cp\u003eNow with the Guix iso. Boot your laptop in it, and follow the instructions to install the OS, just ignore the warnings about the libre software, And stop in the part that you actually going to start the installation, and open another TTY:\u003c/p\u003e","title":"Guix installer"},{"content":"VoidStrap installer. A basic minimalist installer of void-linux with some packages to get ready to enjoy this amazing GNU/Linux distribution.\nUsage: Running install.sh Download the iso, and once in root inside the live, git clone this repo: (You need to update inside the iso and install git)\nIf you want musl you can change the link to the mirror in the install.sh script:\n1 2 3 4 - Change this in line 11: export XBPS_ARCH=x86_64 \u0026amp;\u0026amp; xbps-install -Suy -R http://mirrors.servercentral.com/voidlinux/current -r /mnt \\ - For this: export XBPS_ARCH=x86_64-musl \u0026amp;\u0026amp; xbps-install -Suy -R http://mirrors.servercentral.com/voidlinux/current/musl -r /mnt \\ 1 2 3 git clone https://git.disroot.org/jpacheco/voidstrap cd voidstrap sh install.sh Once there the script will open cfdisk, and you need to format the HDD in this specific format:\n1 2 3 - /dev/sdX1 -\u0026gt; as the boot partition. - /dev/sdY2 -\u0026gt; as the swap partition. - /dev/sdZ3 -\u0026gt; as the root partition. NOTE: Replace X,Y \u0026amp; Z for your partition name. I consider to have this structure of partition, but you can change it, but you must change the code in postinstall.sh when the scripts make the fstab archive.\nMake sure you do a backup of your files before doing crazy things and trust anyone script\nWhen the install.sh script finish, you need to run the postinstall script located in /root folder:\nRunning postinstall.sh This script its going to create some configuration files, like: fstab, rc.conf, change the password of root, and add user(s).\n1 xchroot /mnt Then run the chroot.sh script.\n1 sh /root/postinstall.sh When the postinsall.sh script finishes, you only need to reboot and enjoy your Void-Linux distribution.\nWhen it finish you need to run the postinstall.sh script, that is going to install the X server and some other \u0026ldquo;necessary\u0026rdquo; packages.\nReferences: Voistrap github repository. Voidlinux Documentation. Tuxliban guides. ","permalink":"//localhost:1313/posts/voidstrap/","summary":"\u003ch2 id=\"voidstrap-installer-dot\"\u003eVoidStrap installer.\u003c/h2\u003e\n\u003cp\u003eA basic minimalist installer of \u003ccode\u003evoid-linux\u003c/code\u003e with some packages to get ready to enjoy\nthis amazing GNU/Linux distribution.\u003c/p\u003e\n\u003ch2 id=\"usage\"\u003eUsage:\u003c/h2\u003e\n\u003ch3 id=\"running-install-dot-sh\"\u003eRunning install.sh\u003c/h3\u003e\n\u003cp\u003eDownload the iso, and once in root inside the live, git clone this repo:\n(You need to update inside the iso and install \u003ccode\u003egit\u003c/code\u003e)\u003c/p\u003e\n\u003cp\u003eIf you want musl you can change the link to the mirror in the \u003ccode\u003einstall.sh\u003c/code\u003e script:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e4\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-text\" data-lang=\"text\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e- Change this in line 11:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eexport XBPS_ARCH=x86_64 \u0026amp;\u0026amp; xbps-install -Suy -R http://mirrors.servercentral.com/voidlinux/current -r /mnt \\\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e- For this:\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eexport XBPS_ARCH=x86_64-musl \u0026amp;\u0026amp; xbps-install -Suy -R http://mirrors.servercentral.com/voidlinux/current/musl -r /mnt \\\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e3\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003egit clone https://git.disroot.org/jpacheco/voidstrap\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"nb\"\u003ecd\u003c/span\u003e voidstrap\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esh install.sh\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOnce there the script will open \u003ccode\u003ecfdisk\u003c/code\u003e, and you need to format the HDD in this\nspecific format:\u003c/p\u003e","title":"Voidstrap"},{"content":"What is GNU/guix. GNU/Guix is a functional package manager and a complete operating system distribution, part of the GNU Project. It is designed to provide a reliable and customizable environment for managing software and configurations.\nIt is basically NixOS but instead of using nix it uses Schem Common Lisp as interpreter.\nWhy Use GNU Guix? Freedom and transparency in software management. Avoids common issues like dependency hell or broken systems due to upgrades. Ideal for developers, researchers, and system administrators who value reproducibility and control.\nI\u0026rsquo;m currently using NixOS, should I switch to guix? The most common answer for that is very universal: It depends, if you want to learn more about lisp definetly this is your distribution, for me this is the fastest init that I ever had, and the best of everything is that I can install nix the package manager and use it whitin guix, is fantastic.\nConclusions. I have been using guix for about a month, and I have to admit that is fast as hell, but in the other part this distribution have a lack of packages, of course you can make the templates in scheme and your are going to have any package, but for me and my workflow I need some packages that not are available in guix, but of course in now days we have more options and my solution for the lack of packages was install nix inside my guix environment, so I can install packages in its latest version.\nSo, for me this is kind of the best Linux distribution because of the structure, is like Venom linux combined with NixOS in my opinion.\n","permalink":"//localhost:1313/posts/should-i-use-gnu-guix/","summary":"\u003ch2 id=\"what-is-gnu-guix-dot\"\u003eWhat is GNU/guix.\u003c/h2\u003e\n\u003cp\u003e\u003cstrong\u003eGNU/Guix\u003c/strong\u003e is a functional package manager and a complete operating system distribution, part of the GNU Project. It is designed to provide a reliable and customizable environment for managing software and configurations.\u003c/p\u003e\n\u003cp\u003eIt is basically \u003ccode\u003eNixOS\u003c/code\u003e but instead of using nix it uses \u003ccode\u003eSchem Common Lisp\u003c/code\u003e as interpreter.\u003c/p\u003e\n\u003ch2 id=\"why-use-gnu-guix\"\u003eWhy Use GNU Guix?\u003c/h2\u003e\n\u003cp\u003eFreedom and transparency in software management.\nAvoids common issues like dependency hell or broken systems due to upgrades.\nIdeal for developers, researchers, and system administrators who value reproducibility and control.\u003c/p\u003e","title":"Should I use GNU/guix?"},{"content":"A brief Introduction. This is no t going to be a post about programming or technology, this is kind of a way to express my feelings about one important thing that I think is going to change my life, I\u0026rsquo;m talking about my job and how this ambient change my mind and my vision about this important thing that a lot of us need to do and hold the job pressure to keep some security for our families.\nThe history\u0026hellip; I have almost 5 years working in Autoliv in H.Matamoros, in the meaning of that time I was trying every single day to make my best, trying to improve things, make the process better, being the fastest troubleshooting solver, have less machines failures, less downtime, questioning about how maintenance can be better, and more thing related to the maintenance department.\nAs you may wonder, yes, I am a maintenance technician in the die-cast area, I always though that for require something you need to share something first, so that was basically what I was doing for about 4 years, mean while in those years, I prof myself, and prof others that I was capable to have an engineering position, because I was doing some specific tasks and covering the Controls Engineer when he was out of the job, develop projects, etc, all of that being a maintenance technician. So with that being said, I apply to various engineering vacancy\u0026rsquo;s, but for one reason I never have been promoted, always have other person or the manager cancel the vacant.\nThat\u0026rsquo;s the why I realize that I don\u0026rsquo;t need to effort my self to achieve something that is not going to happens. So I decide to only do the job for what I was hired (maintenance technician).\nIn the past 4 and a half years, I think I was doing a good job, not because I say it, my boss say it, the engineering department say it, the production department trust in my skills as a troubleshooting resolver. So at that time I was thinking that if I was doing a “good” job, maybe it could be easy to achieve some engineering charge, the thing is that I was wrong. It seems that being good and give some extra skills to the job were not enough. job, maybe it could be easy to achieve some engineering charge, the thing is that I was wrong. It seems that be good and give some extra skills to the job were not enough.\nTo the time, I decided to apply to a engineering position, so I do, I have a couple of interviews with the managers, but unfortunately, they choose other person, or canceled the job position. That basically drop me down, because It was kind of I don\u0026rsquo;t know, It seems that I\u0026rsquo;m was good, but not enough, some times when I fill the job when the control\u0026rsquo;s engineer was out of the job, I have treat with others engineers, but I don\u0026rsquo;t want to say bad things about them, but in my perspective, those engineers are too young and with a lack of experience, don\u0026rsquo;t let me wrong, but is I went messed up when those guys came to me and ask me for directions, while technically I am a low level in the structure:\nEngineer \u0026gt; Technician\nSo I remember that day, I returned to my home so mad and sad, Why?, a few weeks before, I was working in the first shift, everything goes fine, I have like 5 months since I was returned to the first shift;\nLong short history: As a technician with the “strength” of programming, I must be in other shift because in the first shift was the main programming engineer.\nOf course for me that was pointless, because I don\u0026rsquo;t have nothing to do with the engineer, because I am a technician. So that day my boss came to my position and say that I need to move to the 2nd shift, because he need some one that cover the automation issues in the area, and I am the only technician with the knowledge (blah, blah, blah\u0026hellip;)\nThe end. Months later, I feel not comfortable, with my job, at that point I feel messy, I don\u0026rsquo;t want to go in there, not because laziness, but because I lost the feeling, I don\u0026rsquo;t know how to describe it.\nTo my fortune, I have an job interview for the maintenance supervisor roll in another DieCasting company here in H. Matamoros. And fortunately I was selected to have the job. Finally I ended quite my job, and start a new one now in a better roll and with more opportunities and new challenges to my personal and professional career.\n","permalink":"//localhost:1313/posts/a-job-history/","summary":"\u003ch2 id=\"a-brief-introduction-dot\"\u003eA brief Introduction.\u003c/h2\u003e\n\u003cp\u003eThis is no t going to be a post about programming or technology, this is kind of a way to express my feelings about one important thing that I think is going to change my life, I\u0026rsquo;m talking about my job and how this ambient change my mind and my vision about this important thing that a lot of us need to do and hold the job pressure to keep some security for our families.\u003c/p\u003e","title":"A job history."},{"content":"Installation of Ollama. In my case, I installed ollama from my package manager, although you can install it using the following code:\n1 curl -fsSL https://ollama.com/install.sh | sh Once ollama is installed, you should add it to your startup. In my case, I do it from the init of hyprland, but it will depend on whether you use .xinitrc or something else. It should be launched as follows:\n1 ollama serve Installing a model. To use Ollama, we need to download a model. A model is basically who you will be talking to when making a query. In the case of ellama, they suggest installing zephyr as the model, so we need to install it.\n1 ollama pull zephyr Installing ellama. Once ollama \u0026amp; zephyr are installed, we can proceed to install and configure ellama in Emacs.\nMy ellama configuration. As you can see, it\u0026rsquo;s not very complicated. The options for the ellama package are quite intuitive, like the language and keybindings. If you have any questions, feel free to comment, and we can follow up.\n1 2 3 4 5 6 7 8 9 (use-package ellama (setopt ellama-language \u0026#34;English\u0026#34;) (setopt ellama-user-nick \u0026#34;jpacheco.xyz\u0026#34;) (setopt ellama-keymap-prefix \u0026#34;C-c e\u0026#34;) (require \u0026#39;llm-ollama) (setopt ellama-provider (make-llm-ollama \u0026#34;zephyr\u0026#34; \u0026#34;zephyr\u0026#34;))) ","permalink":"//localhost:1313/posts/ellama/","summary":"\u003ch2 id=\"installation-of-ollama-dot\"\u003eInstallation of Ollama.\u003c/h2\u003e\n\u003cp\u003eIn my case, I installed \u003ccode\u003eollama\u003c/code\u003e from my package manager, although you can install it using the following code:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003ecurl -fsSL https://ollama.com/install.sh \u003cspan class=\"p\"\u003e|\u003c/span\u003e sh\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cp\u003eOnce \u003ccode\u003eollama\u003c/code\u003e is installed, you should add it to your startup. In my case, I do it from the init of \u003ccode\u003ehyprland\u003c/code\u003e, but it will depend on whether you use \u003ccode\u003e.xinitrc\u003c/code\u003e or something else. It should be launched as follows:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003eollama serve\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003ch2 id=\"installing-a-model-dot\"\u003eInstalling a model.\u003c/h2\u003e\n\u003cp\u003eTo use Ollama, we need to download a model. A model is basically who you will be talking to when making a query. In the case of \u003ccode\u003eellama\u003c/code\u003e, they suggest installing \u003ccode\u003ezephyr\u003c/code\u003e as the model, so we need to install it.\u003c/p\u003e","title":"Ellama, a emacs AI helper."},{"content":"Introduction \u0026ldquo;Hugo is one of the most popular open-source static site generators. With its amazing speed and flexibility, Hugo makes building websites fun again.\u0026rdquo;\nInstallation Hugo is multi platform, so the installation depends on what SO do you use, in this example I Show how to install in Arch-linux because it\u0026rsquo;s easy.\n1 sudo pacman -S hugo Creating a New Site Initialize a New Hugo Site This is the command in order to create a hugo site,\n1 hugo new site my-website.org my-website.org is the name of the directory that hugo is going to create, and where all the files are going to be. Directory Structure Overview 1 2 3 4 5 6 7 8 9 10 11 $ tree -d my-website.org my-website.org ├── archetypes ├── assets ├── content ├── data ├── i18n ├── layouts ├── static └── themes Initialize an empty git repository. This is very useful because in case of mess, you can easily roll back.\n1 git init Creating Content Creating a New Post This is the command to create post within HUGO:\n1 hugo new content content/posts/my-first-post.md Hugo creates a my-first-post.md in the content/posts/ directory, open it with your editor, you must see this content in the file:\n1 2 3 4 5 +++ title = \u0026#39;My First Post\u0026#39; date = 2024-01-14T07:07:07+01:00 draft = true +++ Notice the draft value in the front matter is true. By default, Hugo does not publish draft content when you build the site. Learn more about draft, future, and expired content.\nAdd some Markdown to the body of the post, but do not change the draft value.\n1 2 3 4 5 6 7 8 9 10 +++ title = \u0026#39;My First Post\u0026#39; date = 2024-01-14T07:07:07+01:00 draft = true +++ ## Introduction This is **bold** text, and this is *emphasized* text. Visit the [Hugo](https://gohugo.io) website! Working with Themes To install a theme is basically download it from GitHub, you can find more themes here.\nDownloading and Installing a Theme In this guide we are going to use PaperMod theme, so we need to install it througt various ways.\nAs a submodule (recommended). 1 2 git submodule add --depth=1 https://github.com/adityatelange/hugo-PaperMod.git themes/PaperMod git submodule update --init --recursive # needed when you reclone your repo (submodules may not get cloned automatically) Simply clone. 1 git clone https://github.com/adityatelange/hugo-PaperMod themes/PaperMod --depth=1 Keep in mind that if you clone the repository you must delete the .git folder inside the theme, because is going to have conflicts when you try to push your site.\nThe next ones I never used, but you can go to the HUGO documentation for read more about these.\nExpand Method 3 - Download an unzip Hugo module Configuring the Theme \u0026amp; see it in action. Finally set theme as PaperMod in your site config, hugo.toml or config.toml\n1 theme = \u0026#34;PaperMod\u0026#34; Once you do this you can verify if the site applied the theme correctly by running the hugo server:\n1 hugo server Now, in your browser, open localhost:1313, and you should see your site with the proper theme applied.\nConfiguration example for PaperMod theme. This is a basic configuration template for PaperMod theme:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 baseURL = \u0026#39;https://example.org/\u0026#39; languageCode = \u0026#39;en-us\u0026#39; title = \u0026#39;My New Hugo Site\u0026#39; theme = \u0026#34;PaperMod\u0026#34; copyright = \u0026#34;[PaperMod Contributors](https://github.com/adityatelange/hugo-PaperMod/graphs/contributors)\u0026#34; paginate = 5 enableInlineShortcodes = true enableRobotsTXT = true buildDrafts = false buildFuture = false buildExpired = false enableEmoji = true pygmentsUseClasses = true mainsections = [ \u0026#34;posts\u0026#34;, \u0026#34;papermod\u0026#34; ] [minify] disableXML = true [languages.en] languageName = \u0026#34;English\u0026#34; weight = 1 [languages.en.taxonomies] category = \u0026#34;categories\u0026#34; tag = \u0026#34;tags\u0026#34; series = \u0026#34;series\u0026#34; [[languages.en.menu.main]] name = \u0026#34;Archive\u0026#34; url = \u0026#34;archives\u0026#34; weight = 5 [[languages.en.menu.main]] name = \u0026#34;Posts\u0026#34; url = \u0026#34;posts/\u0026#34; weight = 10 [outputs] home = [ \u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34; ] [params] env = \u0026#34;production\u0026#34; description = \u0026#34;Theme PaperMod - https://github.com/adityatelange/hugo-PaperMod\u0026#34; author = \u0026#34;Theme PaperMod\u0026#34; defaultTheme = \u0026#34;auto\u0026#34; ShowShareButtons = true ShowReadingTime = true displayFullLangName = true ShowPostNavLinks = true ShowBreadCrumbs = true ShowCodeCopyButtons = true ShowRssButtonInSectionTermList = true ShowAllPagesInArchive = true ShowPageNums = true ShowToc = true images = [ \u0026#34;images/papermod-cover.png\u0026#34; ] [params.profileMode] enabled = false title = \u0026#34;PaperMod\u0026#34; imageUrl = \u0026#34;#\u0026#34; imageTitle = \u0026#34;my image\u0026#34; [[params.profileMode.buttons]] name = \u0026#34;Archives\u0026#34; url = \u0026#34;archives\u0026#34; [[params.profileMode.buttons]] name = \u0026#34;Tags\u0026#34; url = \u0026#34;tags\u0026#34; [params.homeInfoParams] Title = \u0026#34;PaperMod\u0026#39;s Demo\u0026#34; Content = \u0026#34;\u0026#34;\u0026#34; ?? Welcome to demo page of Hugo\u0026#39;s theme PaperMod! - **PaperMod** is designed to be clean and simple but fast and responsive theme with useful feature-set that enhances UX. - Feel free to show your support by giving us a star ?? on GitHub and sharing with your friends and social media . - PaperMod is based on theme [Paper](https://github.com/nanxiaobei/hugo-paper/tree/4330c8b12aa48bfdecbcad6ad66145f679a430b3). \u0026#34;\u0026#34;\u0026#34; [[params.socialIcons]] name = \u0026#34;github\u0026#34; title = \u0026#34;View Source on Github\u0026#34; url = \u0026#34;https://github.com/adityatelange/hugo-PaperMod\u0026#34; [[params.socialIcons]] name = \u0026#34;Discord\u0026#34; title = \u0026#34;Join discord community\u0026#34; url = \u0026#34;https://discord.gg/ahpmTvhVmp\u0026#34; [[params.socialIcons]] name = \u0026#34;X\u0026#34; title = \u0026#34;Share PaperMod on X/Twitter\u0026#34; url = \u0026#34;https://x.com/intent/tweet/?text=Checkout%20Hugo%20PaperMod%20%E2%9C%A8%0AA%20fast,%20clean,%20responsive%20Hugo%20theme.\u0026amp;url=https://github.com/adityatelange/hugo-PaperMod\u0026amp;hashtags=Hugo,PaperMod\u0026#34; [[params.socialIcons]] name = \u0026#34;KoFi\u0026#34; title = \u0026#34;Buy me a Ko-Fi :)\u0026#34; url = \u0026#34;https://ko-fi.com/adityatelange\u0026#34; [params.assets] disableHLJS = true [markup.goldmark.renderer] unsafe = true [markup.highlight] noClasses = false [services.instagram] disableInlineCSS = true [services.twitter] disableInlineCSS = true Building the Site Generating the Static Site At this point we need to generate the static we site, the most basic command to publish it is just run hugo in the terminal inside the root of the project. So you notice that a public folder is now created, if you look inside, you\u0026rsquo;ll find all the html files, and everything to deploy as a web page.\nSet specific folder to export your site. If you don\u0026rsquo;t want to have your publish site in the public folder, you can set another path to export it instead of the public folder by adding this line at top of your hugo.toml configuration file:\n1 2 3 publishDir = \u0026#34;/path/to/export/\u0026#34; #example publishDir = \u0026#34;~/my-site.org/\u0026#34; Conclusion With all the context before, you may be able to start your web site, blog, etc. As you read, is very simple to have a very nice and useful static web-page, the \u0026ldquo;hard\u0026rdquo; part is to select the theme.\nThe next step is to publish your web to a custom server or on github, gitlab, codeberg pages.\nPreparing for Deployment. Deploying to a Web Server or Hosting Service. Additional Resources Hugo quick start guide. Hugo documentation. ","permalink":"//localhost:1313/posts/basics-of-hugo/","summary":"\u003ch2 id=\"introduction\"\u003eIntroduction\u003c/h2\u003e\n\u003cblockquote\u003e\n\u003cp\u003e\u0026ldquo;Hugo is one of the most popular open-source static site generators. With its amazing speed and flexibility, Hugo makes building websites fun again.\u0026rdquo;\u003c/p\u003e\u003c/blockquote\u003e\n\u003ch2 id=\"installation\"\u003eInstallation\u003c/h2\u003e\n\u003cp\u003eHugo is multi platform, so the installation depends on what SO do you use, in this example I Show how to install in \u003ccode\u003eArch-linux\u003c/code\u003e because it\u0026rsquo;s easy.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003esudo pacman -S hugo\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003ch2 id=\"creating-a-new-site\"\u003eCreating a New Site\u003c/h2\u003e\n\u003ch3 id=\"initialize-a-new-hugo-site\"\u003eInitialize a New Hugo Site\u003c/h3\u003e\n\u003cp\u003eThis is the command in order to create a hugo site,\u003c/p\u003e","title":"Basics of HUGO"},{"content":"Neovim for Programming Efficiency and Speed: Neovim is highly efficient for programming due to its lightweight nature and focus on speed. It starts up faster and can handle large files with ease. Plugin Ecosystem: Neovim has a rich plugin ecosystem, especially for programming-related tasks. Plugins like nvim-treesitter for syntax highlighting, telescope.nvim for fuzzy finding, and coc.nvim or nvim-lspconfig for Language Server Protocol (LSP) support make it a powerful choice for coding. Modal Editing: Neovim, like Vim, uses modal editing, which can be very powerful for code navigation and manipulation once you get used to it. Emacs for Writing Posts (and Beyond) Org-mode: Emacs shines when it comes to writing and organizing content, especially with Org-mode. Org-mode is exceptional for note-taking, task management, and writing posts or documentation. It allows you to export your work to various formats (HTML, PDF, LaTeX, etc.) easily. Extensibility: Emacs is known for its extensibility. You can customize it to be a full-fledged IDE, text editor, or writing tool. For blog posts, especially if you\u0026rsquo;re using something like ox-hugo, Emacs can be incredibly powerful. Unified Environment: If you prefer an environment where you can write, code, manage tasks, and do everything in one place, Emacs offers that. It\u0026rsquo;s an all-in-one tool where you can manage your entire workflow. Which Should You Choose? For Programming: Neovim might be better if you want a focused, fast, and highly efficient tool purely for coding. It\u0026rsquo;s especially suitable if you prefer modal editing and a streamlined environment.\nFor Writing and More: Emacs could be better if you\u0026rsquo;re looking for a versatile tool that excels at writing posts, organizing content, and managing your entire workflow beyond just coding. It\u0026rsquo;s particularly strong if you take advantage of Org-mode\u0026rsquo;s features.\nSince I already use Emacs for my blog with Hugo, I find it more productive to keep using it for writing and content management while possibly using Neovim for coding tasks if you prefer its efficiency and speed.\n","permalink":"//localhost:1313/posts/emacs-vs-nvim/","summary":"\u003ch2 id=\"neovim-for-programming\"\u003eNeovim for Programming\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eEfficiency and Speed: Neovim is highly efficient for programming due to its lightweight nature and focus on speed. It starts up faster and can handle large files with ease.\u003c/li\u003e\n\u003cli\u003ePlugin Ecosystem: Neovim has a rich plugin ecosystem, especially for programming-related tasks. Plugins like nvim-treesitter for syntax highlighting, telescope.nvim for fuzzy finding, and coc.nvim or nvim-lspconfig for Language Server Protocol (LSP) support make it a powerful choice for coding.\u003c/li\u003e\n\u003cli\u003eModal Editing: Neovim, like Vim, uses modal editing, which can be very powerful for code navigation and manipulation once you get used to it.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"emacs-for-writing-posts--and-beyond\"\u003eEmacs for Writing Posts (and Beyond)\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003eOrg-mode: Emacs shines when it comes to writing and organizing content, especially with Org-mode. Org-mode is exceptional for note-taking, task management, and writing posts or documentation. It allows you to export your work to various formats (HTML, PDF, LaTeX, etc.) easily.\u003c/li\u003e\n\u003cli\u003eExtensibility: Emacs is known for its extensibility. You can customize it to be a full-fledged IDE, text editor, or writing tool. For blog posts, especially if you\u0026rsquo;re using something like ox-hugo, Emacs can be incredibly powerful.\u003c/li\u003e\n\u003cli\u003eUnified Environment: If you prefer an environment where you can write, code, manage tasks, and do everything in one place, Emacs offers that. It\u0026rsquo;s an all-in-one tool where you can manage your entire workflow.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch2 id=\"which-should-you-choose\"\u003eWhich Should You Choose?\u003c/h2\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003eFor Programming: Neovim might be better if you want a focused, fast, and highly efficient tool purely for coding. It\u0026rsquo;s especially suitable if you prefer modal editing and a streamlined environment.\u003c/p\u003e","title":"Emacs vs Neovim"},{"content":" I have been using emacs most of the time for writting, and of course when I started to make my blog I have been use it (emacs) since of it. In the beginig when I start writing I was using some scripts and tips from system crafters he use htmlize and some lisp scripting. It was ok but then I have been watching some lukesmith videos and see this video about him switching to HUGO, so I decided to check HUGO too.\nFigure 1: A overview of how my org file looks like.\nWhat software and packages do I use?. Yep! I use emacs 🤓 and ox-hugo.\nAnd to build the static web I use HUGO and git.\n1 2 3 (use-package ox-hugo :ensure t :after ox) Org and its configuration. HUGO uses markdown to manage the sites, posts, etc. but because we where using emacs, (we don\u0026rsquo;t like others than org syntax), so there are a lot of variables that ox-hugo handle in order to been exported to markdown syntax.\nIn my case I like to develop my whole blog into a single org-file\n1 2 3 4 5 6 7 8 9 10 #+begin_src org #+TITLE: jpacheco.xyz #+AUTHOR: Javier Pacheco #+DESCRIPTION: My website posts \u0026amp; projects. #+hugo_base_dir: ~/webdev/blog/ #+startup: content #+hugo_custom_front_matter: toc true #+hugo_auto_set_lastmod: t #+date: 2024-07-04 #+seq_todo: TODO(t) WAIT(w@/!) | DONE(d!) These are the most important and relevant to use within HUGO:\n#+HUGO_BASE_DIR: This declare where you HUGO site is located, basically in the path where you run hugo new site my-site.\n#+HUGO_CUSTOM_FRONT_MATTER: This is for enable/disable the toc of the posts when ox-hugo exported to md format.\nWriting the posts. Write a post is very easy to start, you only need to add a org lvl-1 header, and add a more metadata (properties). The sub-headers of the post are going to be org-lvl-3 headers, and so on.\n1 2 3 4 5 6 7 * TODO How I made my blog with emacs and hugo :emacs:blog:hugo: :PROPERTIES: :EXPORT_FILE_NAME: my-blog-in-emacs :EXPORT_DESCRIPTION: A overview of how I write and develop my web blog using emacs \u0026amp; hugo :DATE: 08-14-2024 :EXPORT_HUGO_SECTION: posts :END: :EXPORT_FILE_NAME: This is how your file is going to be stored, you may or not add the .md extension.\n:EXPORT_HUGO_SECTION: Here is the tricky part, if you have multiple sections like: post, projects, topics, etc. this is where the file is going to be stored.\nIf the sub-header starts with a TODO, when exported the md metadata is going to have draftt: true, which means even the archive is going to be created when you run hugo to create your site that md archive is going to be ignored until you finish (remove the TODO or change it to DONE.).\nAnd that\u0026rsquo;s it, you can search more options for manage the front matter in hugo in this page.\nThanks for reading.\n","permalink":"//localhost:1313/posts/my-blog-in-emacs/","summary":"\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eI have been using emacs most of the time for writting, and of course when I started to make my blog I have been use it (emacs) since of it. In the beginig when I start writing I was using some scripts and tips from \u003ca href=\"https://systemcrafters.net/\"\u003esystem crafters\u003c/a\u003e he use htmlize and some \u003cem\u003elisp\u003c/em\u003e scripting. It was ok but then I have been watching some \u003ca href=\"https://www.youtube.com/@LukeSmithxyz\"\u003elukesmith\u003c/a\u003e videos and see this \u003ca href=\"https://www.youtube.com/watch?v=jAXKSKb3etk\u0026amp;pp=ygUOaHVnbyBsdWtlc21pdGg%3D\"\u003evideo\u003c/a\u003e about him switching to \u003ccode\u003eHUGO\u003c/code\u003e, so I decided to check \u003ccode\u003eHUGO\u003c/code\u003e too.\u003c/p\u003e","title":"How I made my blog with emacs and hugo"},{"content":"What is telega?. According to the Github repository:\nTelega telega.el is full featured unofficial client for Telegram platform for GNU Emacs. As you may know, my main OS, at this time (2024-08-21) is NixOS, so I was trying to install Telega in my emacs, but as you can imagine, the file system hierarchy don\u0026rsquo;t works \u0026ldquo;normal\u0026rdquo; in NixOS, so is a little tricky set up the environment to actually make Telega works.\nRequisites: gnumake. (To compile). cmake (To compile). tdlib (Version \u0026gt; 1.8.29). Process of installation. install the dependencies using your configuration.nix, home-manager, or wathever method you use to install packages in NixOS. Install Telega in emacs. 1 2 (use-package telega :ensure t) Now, because I use NixOS (by the way), you must know that the file system hierarchy don\u0026rsquo;t works same as in linux or macOS, so I need to declare where telega is going to see the tdlib libraries, so: 1 (setq telega-server-lib-prefix \u0026#34;/home/user/.nix-profile/\u0026#34;) Compile Telega-server inside emacs. 1 M-x telega-server-build Or simply run telega: 1 M-x telega With that, Telega must be compiled, and ready to go.\n","permalink":"//localhost:1313/posts/install-telega-nixos/","summary":"\u003ch2 id=\"what-is-telega\"\u003eWhat is telega?.\u003c/h2\u003e\n\u003cp\u003eAccording to the \u003ca href=\"https://github.com/zevlg/telega.el\"\u003eGithub\u003c/a\u003e repository:\u003c/p\u003e\n\u003cdl\u003e\n\u003cdt\u003eTelega\u003c/dt\u003e\n\u003cdd\u003etelega.el is full featured unofficial client for Telegram platform for GNU Emacs.\u003c/dd\u003e\n\u003c/dl\u003e\n\u003chr\u003e\n\u003cp\u003eAs you may know, my main OS, at this time (2024-08-21) is \u003ccode\u003eNixOS\u003c/code\u003e, so I was trying to install \u003ccode\u003eTelega\u003c/code\u003e in my emacs, but as you can imagine, the file system hierarchy don\u0026rsquo;t works \u0026ldquo;normal\u0026rdquo; in \u003ccode\u003eNixOS\u003c/code\u003e, so is a little tricky set up the environment to actually make \u003ccode\u003eTelega\u003c/code\u003e works.\u003c/p\u003e","title":"Install Telega in NixOS - Emacs."},{"content":"As websites grow, incorporating a search feature becomes increasingly crucial. However, implementing search functionality can be challenging on a statically generated site since there\u0026rsquo;s no server-side component to handle the search. Instead, the search must be performed on the client side within the browser using JavaScript.\nFigure 1: This is how my web looks.\nFortunately, there are existing solutions to address this issue. Below, we demonstrate one such solution that utilizes FuseJS and MarkJS. This implementation is inspired by a gist from eddiewebb, but it\u0026rsquo;s built using plain JavaScript rather than jQuery.\nPage - content/search/_index.md Create a page to serve as the search form and display search results. In the markdown, set the layout to ‘search’ and proceed to create this layout (in the next step) to easily manage the HTML.\n1 2 3 4 5 6 --- title: \u0026#34;Search\u0026#34; sitemap: priority : 0.1 layout: \u0026#34;search\u0026#34; --- Layout - layout/_default/search.html This search page contains a \u0026lt;div\u0026gt; element for displaying search results (#search-results) and another \u0026lt;div\u0026gt; element for showing a loading message (.search-loading). The layout also defines a template that will later be used in the JavaScript to render a single search result. Finally, it loads the necessary JS libraries (from a CDN in this example, though self-hosting is an option).\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 {{ define \u0026#34;main\u0026#34; }} \u0026lt;main\u0026gt; \u0026lt;form action=\u0026#34;/search\u0026#34; method=\u0026#34;GET\u0026#34;\u0026gt; \u0026lt;input type=\u0026#34;search\u0026#34; name=\u0026#34;q\u0026#34; id=\u0026#34;search-query\u0026#34; placeholder=\u0026#34;Search....\u0026#34; autofocus\u0026gt; \u0026lt;!-- \u0026lt;button type=\u0026#34;submit\u0026#34;\u0026gt;Search\u0026lt;/button\u0026gt; --\u0026gt; \u0026lt;/form\u0026gt; \u0026lt;div id=\u0026#34;search-results\u0026#34;\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;search-loading\u0026#34;\u0026gt;Loading...\u0026lt;/div\u0026gt; \u0026lt;script id=\u0026#34;search-result-template\u0026#34; type=\u0026#34;text/x-js-template\u0026#34;\u0026gt; \u0026lt;div id=\u0026#34;summary-${key}\u0026#34;\u0026gt; \u0026lt;h3\u0026gt;\u0026lt;a href=\u0026#34;${link}\u0026#34;\u0026gt;${title}\u0026lt;/a\u0026gt;\u0026lt;/h3\u0026gt; \u0026lt;p\u0026gt;${snippet}\u0026lt;/p\u0026gt; \u0026lt;p\u0026gt; \u0026lt;small\u0026gt; ${ isset tags }Tags: ${tags}\u0026lt;br\u0026gt;${ end } \u0026lt;/small\u0026gt; \u0026lt;/p\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/fuse.js/6.6.2/fuse.min.js\u0026#34; integrity=\u0026#34;sha512-Nqw1tH3mpavka9cQCc5zWWEZNfIPdOYyQFjlV1NvflEtQ0/XI6ZQ+H/D3YgJdqSUJlMLAPRj/oXlaHCFbFCjoQ==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;script src=\u0026#34;https://cdnjs.cloudflare.com/ajax/libs/mark.js/8.11.1/mark.min.js\u0026#34; integrity=\u0026#34;sha512-5CYOlHXGh6QpOFA/TeTylKLWfB3ftPsde7AnmhuitiTX4K5SqCLBeKro6sPS8ilsz1Q4NRx3v8Ko2IBiszzdww==\u0026#34; crossorigin=\u0026#34;anonymous\u0026#34; referrerpolicy=\u0026#34;no-referrer\u0026#34;\u0026gt;\u0026lt;/script\u0026gt; \u0026lt;/main\u0026gt; {{ end }} JS The main part of the code is JavaScript, where everything is tied together. The URL parameters are read to obtain the query, which is then passed to FuseJS and MarkJS, and the results are written back to the page.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 var summaryInclude = 180; var fuseOptions = { shouldSort: true, includeMatches: true, includeScore: true, tokenize: true, location: 0, distance: 100, minMatchCharLength: 1, keys: [ {name: \u0026#34;title\u0026#34;, weight: 0.45}, {name: \u0026#34;contents\u0026#34;, weight: 0.4}, {name: \u0026#34;tags\u0026#34;, weight: 0.1}, {name: \u0026#34;categories\u0026#34;, weight: 0.05} ] }; // ============================= // Search // ============================= var inputBox = document.getElementById(\u0026#39;search-query\u0026#39;); if (inputBox !== null) { var searchQuery = param(\u0026#34;q\u0026#34;); if (searchQuery) { inputBox.value = searchQuery || \u0026#34;\u0026#34;; executeSearch(searchQuery, false); } else { document.getElementById(\u0026#39;search-results\u0026#39;).innerHTML = \u0026#39;\u0026lt;p class=\u0026#34;search-results-empty\u0026#34;\u0026gt;Please enter a word or phrase above, or see \u0026lt;a href=\u0026#34;/tags/\u0026#34;\u0026gt;all tags\u0026lt;/a\u0026gt;.\u0026lt;/p\u0026gt;\u0026#39;; } } function executeSearch(searchQuery) { show(document.querySelector(\u0026#39;.search-loading\u0026#39;)); fetch(\u0026#39;/index.json\u0026#39;).then(function (response) { if (response.status !== 200) { console.log(\u0026#39;Looks like there was a problem. Status Code: \u0026#39; + response.status); return; } // Examine the text in the response response.json().then(function (pages) { var fuse = new Fuse(pages, fuseOptions); var result = fuse.search(searchQuery); if (result.length \u0026gt; 0) { populateResults(result); } else { document.getElementById(\u0026#39;search-results\u0026#39;).innerHTML = \u0026#39;\u0026lt;p class=\\\u0026#34;search-results-empty\\\u0026#34;\u0026gt;No matches found\u0026lt;/p\u0026gt;\u0026#39;; } hide(document.querySelector(\u0026#39;.search-loading\u0026#39;)); }) .catch(function (err) { console.log(\u0026#39;Fetch Error :-S\u0026#39;, err); }); }); } function populateResults(results) { var searchQuery = document.getElementById(\u0026#34;search-query\u0026#34;).value; var searchResults = document.getElementById(\u0026#34;search-results\u0026#34;); // pull template from hugo template definition var templateDefinition = document.getElementById(\u0026#34;search-result-template\u0026#34;).innerHTML; results.forEach(function (value, key) { var contents = value.item.contents; var snippet = \u0026#34;\u0026#34;; var snippetHighlights = []; snippetHighlights.push(searchQuery); snippet = contents.substring(0, summaryInclude * 2) + \u0026#39;\u0026amp;hellip;\u0026#39;; //replace values var tags = \u0026#34;\u0026#34; if (value.item.tags) { value.item.tags.forEach(function (element) { tags = tags + \u0026#34;\u0026lt;a href=\u0026#39;/tags/\u0026#34; + element + \u0026#34;\u0026#39;\u0026gt;\u0026#34; + \u0026#34;#\u0026#34; + element + \u0026#34;\u0026lt;/a\u0026gt; \u0026#34; }); } var output = render(templateDefinition, { key: key, title: value.item.title, link: value.item.permalink, tags: tags, categories: value.item.categories, snippet: snippet }); searchResults.innerHTML += output; snippetHighlights.forEach(function (snipvalue, snipkey) { var instance = new Mark(document.getElementById(\u0026#39;summary-\u0026#39; + key)); instance.mark(snipvalue); }); }); } function render(templateString, data) { var conditionalMatches, conditionalPattern, copy; conditionalPattern = /\\$\\{\\s*isset ([a-zA-Z]*) \\s*\\}(.*)\\$\\{\\s*end\\s*}/g; //since loop below depends on re.lastInxdex, we use a copy to capture any manipulations whilst inside the loop copy = templateString; while ((conditionalMatches = conditionalPattern.exec(templateString)) !== null) { if (data[conditionalMatches[1]]) { //valid key, remove conditionals, leave contents. copy = copy.replace(conditionalMatches[0], conditionalMatches[2]); } else { //not valid, remove entire section copy = copy.replace(conditionalMatches[0], \u0026#39;\u0026#39;); } } templateString = copy; //now any conditionals removed we can do simple substitution var key, find, re; for (key in data) { find = \u0026#39;\\\\$\\\\{\\\\s*\u0026#39; + key + \u0026#39;\\\\s*\\\\}\u0026#39;; re = new RegExp(find, \u0026#39;g\u0026#39;); templateString = templateString.replace(re, data[key]); } return templateString; } // Helper Functions function show(elem) { elem.style.display = \u0026#39;block\u0026#39;; } function hide(elem) { elem.style.display = \u0026#39;none\u0026#39;; } function param(name) { return decodeURIComponent((location.search.split(name + \u0026#39;=\u0026#39;)[1] || \u0026#39;\u0026#39;).split(\u0026#39;\u0026amp;\u0026#39;)[0]).replace(/\\+/g, \u0026#39; \u0026#39;); } // Keybinds functions document.addEventListener(\u0026#39;keydown\u0026#39;, function(event) { // Check if the Windows key (or Command key on macOS) and forward slash are pressed if (event.metaKey \u0026amp;\u0026amp; event.key === \u0026#39;/\u0026#39;) { // Prevent the default action if necessary event.preventDefault(); // Navigate to the search page window.location.href = \u0026#39;/search\u0026#39;; // Wait for the page to load and then focus on the search input window.addEventListener(\u0026#39;load\u0026#39;, function() { const searchInput = document.getElementById(\u0026#39;search-query\u0026#39;); if (searchInput) { searchInput.focus(); } }); } }); The Data - layouts/_default/index.json All the work we’ve done up until now has been front-end workings, but we also need to build an index.json file which will act as our data source (which is fetched from the JS).\n1 2 3 4 5 {{- $.Scratch.Add \u0026#34;index\u0026#34; slice -}} {{- range .Site.RegularPages -}} {{- $.Scratch.Add \u0026#34;index\u0026#34; (dict \u0026#34;title\u0026#34; .Title \u0026#34;tags\u0026#34; .Params.tags \u0026#34;categories\u0026#34; .Params.categories \u0026#34;contents\u0026#34; .Plain \u0026#34;permalink\u0026#34; .Permalink) -}} {{- end -}} {{- $.Scratch.Get \u0026#34;index\u0026#34; | jsonify -}} Conclusion You can extend this further by offering a live search preview, adding more filters, or allowing sorting options. This method provides a powerful and flexible way to implement search functionality on a static site without relying on any backend services.\n","permalink":"//localhost:1313/posts/search-tool-hugo/","summary":"\u003cp\u003eAs websites grow, incorporating a search feature becomes increasingly crucial. However, implementing search functionality can be challenging on a statically generated site since there\u0026rsquo;s no server-side component to handle the search. Instead, the search must be performed on the client side within the browser using JavaScript.\u003c/p\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003c!-- raw HTML omitted --\u003e\n\u003cfigure\u003e\u003cimg src=\"/images/posts/hugo-search/jpacheco-search.png\"\n    alt=\"Figure 1: This is how my web looks.\"\u003e\u003cfigcaption\u003e\n      \u003cp\u003e\u003c!-- raw HTML omitted --\u003eFigure 1: \u003c!-- raw HTML omitted --\u003eThis is how my web looks.\u003c/p\u003e","title":"Search tool in your HUGO website."},{"content":"The issue: We have a telegram group, in where we share emacs things and some other related to programming and linux in the most part of the time. So one day one of the members says that we can share screens and have a kind of podcast and talk about our environment configurations (sway/hyprland), so I was very curious about it so he invite me to another telegram group, this telegram group is for his YouTube channel, for test my hyprland configuration because he told me that he has troubles in his hyprland configuration using manjaro.\nNow that I face the error, I realize that in my home-manager compilation I had this error since I was using this tool in nixOS, but because I never use it, I never let it importance, so now I realize that this thing need to be solved because I going to use it in the future.\nSo I installed telegram-dektop, and try to share my configuration and guess what; yes I was unable to share my screen. It failed and pop ups some errors.\nThings that I try before to solve the problem. My main distribution at the time (2024-07-28) is nixOS, so I think that this could be a missing declaration in some programs, like xdg-desktop-portal-hyprland, because of that I was researching issues in nixOS \u0026amp; hyprland, but nothing solve the problem.\nSo nothing that I found fix the problem, most of the issues in github was too old, or nothing to do with nixOS, so the last thing that I could do was compile xdg-desktop-portal-hyprland by source, but in nixOS I would install some compilers and other things that I not currently use, but it was the last option.\nSolving the problem. So once in my job, with the mind more clean, I go to the hyprland wiki, and at the bottom there were some tips to debugging if some errors appears.\nSo I add this in my Hyprland configuration file:\n1 exec-once = dbus-update-activation-environment --systemd --all That\u0026rsquo;s it, that little command above solve my 1 day pain trying to share my screen. So I hope this little post be helpful for you if you encounter the same issue as me.\nThanks for read me.\n","permalink":"//localhost:1313/posts/share-screen-hyprland/","summary":"\u003ch2 id=\"the-issue\"\u003eThe issue:\u003c/h2\u003e\n\u003cp\u003eWe have a telegram group, in where we share emacs things and some other related to programming and linux in the most part of the time. So one day one of the members says that we can share screens and have a kind of podcast and talk about our environment configurations (sway/hyprland), so I was very curious about it so he invite me to another telegram group, this telegram group is for his YouTube channel, for test my hyprland configuration because he told me that he has troubles in his hyprland configuration using manjaro.\u003c/p\u003e","title":"Share Screen in Hyprland."},{"content":" Embrace a new level of Emacs mastery with efetch.el – a powerful and user-friendly Emacs Fetching Tool. Designed for enthusiasts who crave insights into their Emacs environment, efetch.el provides a seamless way to peek under the hood of your setup. With just a simple command, unlock a left-side buffer showcasing key details such as Emacs version, host information, user details, installed packages, active theme, and default font. Customizable and accessible, this tool not only delivers a quick snapshot of your Emacs configuration but also opens the door for collaborative enhancements. Join the community on Github contribute your ideas, and elevate your Emacs experience with efetch.el today!\nFigure 1: efetch.el tool in the left side of the frame.\nOverview Are you an Emacs enthusiast who loves to keep track of your environment details? Look no further! We are excited to introduce efetch.el - the Emacs Fetching Tool. This nifty extension provides a quick and informative snapshot of your Emacs setup, helping you stay in the know about your environment configuration.\nFeatures Quick Access: Invoke efetch with a simple command to access a left-side buffer displaying essential information about your Emacs environment.\nInformation at a Glance: Get a concise overview, including Emacs version, host details, user information, installed packages, active theme, and default font.\nCustomization: Tailor the appearance and information displayed in the efetch buffer to suit your preferences.\nConvenient Keyboard Shortcut: Close the efetch buffer and its window effortlessly with the q key.\nHow to Use Installation: Add the following line to your Emacs configuration: 1 (require \u0026#39;efetch) Ensure the efetch.el file is in a directory included in your load-path.\nUsage: Invoke efetch interactively using: 1 M-x efetch The information will be displayed in a left-side buffer named efetch-popup.\nCustomization Feel free to customize the appearance or the information displayed in the efetch buffer by modifying the relevant sections in the efetch function.\nContribution We welcome contributions and feedback! efetch.el is hosted on github. Feel free to fork the repository and submit pull requests. The project is open to changes, improvements, and collaborations.\nGet Started Enhance your Emacs experience with efetch.el! Stay informed about your environment effortlessly. Download and integrate it into your Emacs setup today.\n","permalink":"//localhost:1313/posts/efetch/","summary":"\u003c!-- raw HTML omitted --\u003e\n\u003cp\u003eEmbrace a new level of Emacs mastery with \u003ccode\u003eefetch.el\u003c/code\u003e – a powerful and user-friendly Emacs Fetching Tool. Designed for enthusiasts who crave insights into their Emacs environment, \u003ccode\u003eefetch.el\u003c/code\u003e provides a seamless way to peek under the hood of your setup. With just a simple command, unlock a left-side buffer showcasing key details such as Emacs version, host information, user details, installed packages, active theme, and default font. Customizable and accessible, this tool not only delivers a quick snapshot of your Emacs configuration but also opens the door for collaborative enhancements. Join the community on \u003ca href=\"https://github.com/jpachecoxyz/efetch.el\"\u003eGithub\u003c/a\u003e contribute your ideas, and elevate your Emacs experience with \u003ccode\u003eefetch.el\u003c/code\u003e today!\u003c/p\u003e","title":"Efetch.el"},{"content":"This script record the screen with the wf-recorder tool, it can be the hole screen or a specific area of it. The script is going to store the video in /tmp/screencast.mp4, this script only store one video, personally I think that have more than one record is a mess, more if you only wants to share a quick screencast to telegram, irc, cinny or even to share it through 0x0.st.\nDescription and main variables: 1 2 3 4 5 6 # Created By: Javier Pacheco - javier@jpacheco.xyz # Created On: 29/03/24 # Project: Screen recorder in wayland # Dependencies: wf-recorder wl-copy and a launcher like dmenu, fuzzel, etc. SOUND_CARD=$(pactl list sources | awk \u0026#39;/Name/ \u0026amp;\u0026amp; /.monitor/ {print $2}\u0026#39;) Recording functions: Those functions have enable the sound recording, so if you have some music, video, etc running it will record the sound but not the mic.\nscreencast: This option is going to record a specific area of the screen. This area is going to be specified by slurp.\n1 2 3 screencast() { wf-recorder --audio=$SOUND_CARD -f /tmp/screencast.mp4 } area: This option is going to record a specific area of the screen. This area is going to be specified by slurp.\n1 2 3 area() { wf-recorder --audio=$SOUND_CARD -g \u0026#34;$(slurp)\u0026#34; -f /tmp/screencast.mp4 } Main functions: These functions are tools that ensures this script works correctly. For example if all ready have a existing file recorded, it will removed to record a new one, because this script only will create one video always, and also have a function to kill the process when it finished.\ncheck internet connection: 1 2 3 check_connection() { ping -c 1 google.com 1\u0026gt; /dev/null 2\u0026gt;\u0026amp;1 } share: This option is going to upload the video to 0x0.st and copy the url to the clipboard using wc-copy.\n1 2 3 4 share() { notify-send \u0026#34;uploading..\u0026#34; \u0026#34;video is upoading to 0x0.st\u0026#34; curl -F \u0026#34;file=@/tmp/screencast.mp4\u0026#34; https://0x0.st | wl-copy \u0026amp;\u0026amp; notify-send \u0026#34;Video stored in 0x0.st\u0026#34; } Kill existing process: 1 2 3 4 5 6 7 8 9 kill_proc(){ pkill --signal SIGINT wf-recorder if [ $? -eq 0 ]; then notify-send \u0026#34;Video stored\u0026#34; \u0026#34;Video was stored in /tmp/screencast.mp4\u0026#34; pkill --signal SIGINT wf-recorder exit 0 fi } Remove existing video: 1 2 3 remove_vid() { [ -f /tmp/screencast.mp4 ] \u0026amp;\u0026amp; rm /tmp/screencast.mp4 } Sequence: This is were the scripts actually starts, first of all look if the script is already running, if not then ask for a recording option:\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 kill_proc OPT=$(printf \u0026#34;screencast\\narea\\nshare\\nquit\u0026#34; | fuzzel --dmenu -p \u0026#39;Select an option: \u0026#39; ) case $OPT in \u0026#39;screencast\u0026#39;) sleep 1 remove_vid sleep 1 screencast;; \u0026#39;area\u0026#39;) sleep 1 remove_vid sleep 1 area;; \u0026#39;share\u0026#39;) check_connection \u0026amp;\u0026amp; share || notify-send \u0026#34;Error\u0026#34; \u0026#34;check your internet connection\u0026#34; ;; *|quit) exit 0;; esac The whole code. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 # Created By: Javier Pacheco - javier@jpacheco.xyz # Created On: 29/03/24 # Project: Screen recorder in wayland # Dependencies: wf-recorder wl-copy and a launcher like dmenu, fuzzel, etc. SOUND_CARD=$(pactl list sources | awk \u0026#39;/Name/ \u0026amp;\u0026amp; /.monitor/ {print $2}\u0026#39;) screencast() { wf-recorder --audio=$SOUND_CARD -f /tmp/screencast.mp4 } area() { wf-recorder --audio=$SOUND_CARD -g \u0026#34;$(slurp)\u0026#34; -f /tmp/screencast.mp4 } check_connection() { ping -c 1 google.com 1\u0026gt; /dev/null 2\u0026gt;\u0026amp;1 } share() { notify-send \u0026#34;uploading..\u0026#34; \u0026#34;video is upoading to 0x0.st\u0026#34; curl -F \u0026#34;file=@/tmp/screencast.mp4\u0026#34; https://0x0.st | wl-copy \u0026amp;\u0026amp; notify-send \u0026#34;Video stored in 0x0.st\u0026#34; } kill_proc(){ pkill --signal SIGINT wf-recorder if [ $? -eq 0 ]; then notify-send \u0026#34;Video stored\u0026#34; \u0026#34;Video was stored in /tmp/screencast.mp4\u0026#34; pkill --signal SIGINT wf-recorder exit 0 fi } remove_vid() { [ -f /tmp/screencast.mp4 ] \u0026amp;\u0026amp; rm /tmp/screencast.mp4 } kill_proc OPT=$(printf \u0026#34;screencast\\narea\\nshare\\nquit\u0026#34; | fuzzel --dmenu -p \u0026#39;Select an option: \u0026#39; ) case $OPT in \u0026#39;screencast\u0026#39;) sleep 1 remove_vid sleep 1 screencast;; \u0026#39;area\u0026#39;) sleep 1 remove_vid sleep 1 area;; \u0026#39;share\u0026#39;) check_connection \u0026amp;\u0026amp; share || notify-send \u0026#34;Error\u0026#34; \u0026#34;check your internet connection\u0026#34; ;; *|quit) exit 0;; esac ","permalink":"//localhost:1313/posts/screen-record/","summary":"\u003cp\u003eThis script record the screen with the \u003ccode\u003ewf-recorder\u003c/code\u003e tool, it can be the hole screen or a specific area of it.\nThe script is going to store the video in \u003ccode\u003e/tmp/screencast.mp4\u003c/code\u003e, this script only store one video, personally I think that have more than one record is a mess, more if you only wants to share a quick screencast to \u003cem\u003etelegram, irc, cinny\u003c/em\u003e or even to share it through \u003ccode\u003e0x0.st\u003c/code\u003e.\u003c/p\u003e","title":"Screen Record"},{"content":"Overview Welcome to the Shell Utilities repository This project provides a collection of shell scripts tailored for different window managers and environments, including i3, Hyprland, and Sway, on X11 and Wayland.\nRepository Structure The repository is organized into directories based on the environment and window manager:\n1 2 3 4 5 6 . ├── wayland │ ├── hyprland │ └── sway └── x11 └── i3 wayland/hyprland Scripts for Hyprland on Wayland. wayland/sway Scripts for Sway on Wayland. x11/i3 Scripts for i3 on X11. Installation To install the scripts, use the provided install.sh script. You can install scripts for a specific window manager or all at once.\nNOTE: The install.sh scripts use $HOME/.local/bin as the target, you can edit this variable inside the script, or copy the files manually somewhere as you have your path.\n1 2 3 4 5 6 7 # Install scripts for a specific window manager ./install.sh sway ./install.sh hyprland ./install.sh i3 # Install all scripts ./install.sh all Usage Each script includes usage instructions in the comments at the top. You can run a script directly from the terminal or integrate it into your workflow.\nContributing We welcome contributions! If you\u0026rsquo;d like to contribute, please follow these steps:\nFork the repository. Create a new branch for your feature or fix. Make your changes and commit them with descriptive messages. Push your changes to your fork. Submit a pull request to the main repository. Contact For questions or suggestions, please open an issue on GitHub or contact Javier Pacheco.\n","permalink":"//localhost:1313/posts/shell-utils/","summary":"\u003ch2 id=\"overview\"\u003eOverview\u003c/h2\u003e\n\u003cp\u003eWelcome to the Shell Utilities \u003ca href=\"https://github.com/jpachecoxyz/shell-utils\"\u003erepository\u003c/a\u003e This project provides a collection of shell scripts tailored for different window managers and environments, including i3, Hyprland, and Sway, on X11 and Wayland.\u003c/p\u003e\n\u003ch2 id=\"repository-structure\"\u003eRepository Structure\u003c/h2\u003e\n\u003cp\u003eThe repository is organized into directories based on the environment and window manager:\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e6\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-shell\" data-lang=\"shell\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e.\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e├── wayland\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   ├── hyprland\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e│   └── sway\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e└── x11\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    └── i3\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003cdl\u003e\n\u003cdt\u003ewayland/hyprland\u003c/dt\u003e\n\u003cdd\u003eScripts for Hyprland on Wayland.\u003c/dd\u003e\n\u003cdt\u003ewayland/sway\u003c/dt\u003e\n\u003cdd\u003eScripts for Sway on Wayland.\u003c/dd\u003e\n\u003cdt\u003ex11/i3\u003c/dt\u003e\n\u003cdd\u003eScripts for i3 on X11.\u003c/dd\u003e\n\u003c/dl\u003e\n\u003ch2 id=\"installation\"\u003eInstallation\u003c/h2\u003e\n\u003cp\u003eTo install the scripts, use the provided \u003ccode\u003einstall.sh\u003c/code\u003e script. You can install scripts for a specific window manager or all at once.\u003c/p\u003e","title":"Shell-utils"},{"content":"Emacs Doom Insert item. This script wast taken from doomemacs, it basically insert a item such a heading, subheading, checkbox, etc. based on the item above.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 ;;; javier_pacheco utilities.el --- Some useful utilities -*- lexical-binding: t; -*- (defun +org--insert-item (direction) (let ((context (org-element-lineage (org-element-context) \u0026#39;(table table-row headline inlinetask item plain-list) t))) (pcase (org-element-type context) ;; Add a new list item (carrying over checkboxes if necessary) ((or `item `plain-list) (let ((orig-point (point))) ;; Position determines where org-insert-todo-heading and `org-insert-item\u0026#39; ;; insert the new list item. (if (eq direction \u0026#39;above) (org-beginning-of-item) (end-of-line)) (let* ((ctx-item? (eq \u0026#39;item (org-element-type context))) (ctx-cb (org-element-property :contents-begin context)) ;; Hack to handle edge case where the point is at the ;; beginning of the first item (beginning-of-list? (and (not ctx-item?) (= ctx-cb orig-point))) (item-context (if beginning-of-list? (org-element-context) context)) ;; Horrible hack to handle edge case where the ;; line of the bullet is empty (ictx-cb (org-element-property :contents-begin item-context)) (empty? (and (eq direction \u0026#39;below) ;; in case contents-begin is nil, or contents-begin ;; equals the position end of the line, the item is ;; empty (or (not ictx-cb) (= ictx-cb (1+ (point)))))) (pre-insert-point (point))) ;; Insert dummy content, so that `org-insert-item\u0026#39; ;; inserts content below this item (when empty? (insert \u0026#34; \u0026#34;)) (org-insert-item (org-element-property :checkbox context)) ;; Remove dummy content (when empty? (delete-region pre-insert-point (1+ pre-insert-point)))))) ;; Add a new table row ((or `table `table-row) (pcase direction (\u0026#39;below (save-excursion (org-table-insert-row t)) (org-table-next-row)) (\u0026#39;above (save-excursion (org-shiftmetadown)) (+org/table-previous-row)))) ;; Otherwise, add a new heading, carrying over any todo state, if ;; necessary. (_ (let ((level (or (org-current-level) 1))) ;; I intentionally avoid `org-insert-heading\u0026#39; and the like because they ;; impose unpredictable whitespace rules depending on the cursor ;; position. It\u0026#39;s simpler to express this command\u0026#39;s responsibility at a ;; lower level than work around all the quirks in org\u0026#39;s API. (pcase direction (`below (let (org-insert-heading-respect-content) (goto-char (line-end-position)) (org-end-of-subtree) (insert \u0026#34;\\n\u0026#34; (make-string level ?*) \u0026#34; \u0026#34;))) (`above (org-back-to-heading) (insert (make-string level ?*) \u0026#34; \u0026#34;) (save-excursion (insert \u0026#34;\\n\u0026#34;)))) (run-hooks \u0026#39;org-insert-heading-hook) (when-let* ((todo-keyword (org-element-property :todo-keyword context)) (todo-type (org-element-property :todo-type context))) (org-todo (cond ((eq todo-type \u0026#39;done) ;; Doesn\u0026#39;t make sense to create more \u0026#34;DONE\u0026#34; headings (car (+org-get-todo-keywords-for todo-keyword))) (todo-keyword) (\u0026#39;todo))))))) (when (org-invisible-p) (org-show-hidden-entry)) (when (and (bound-and-true-p evil-local-mode) (not (evil-emacs-state-p))) (evil-insert 1)))) ;;;###autoload (defun +org/insert-item-below (count) \u0026#34;Inserts a new heading, table cell or item below the current one.\u0026#34; (interactive \u0026#34;p\u0026#34;) (dotimes (_ count) (+org--insert-item \u0026#39;below))) ;;;###autoload (defun +org/insert-item-above (count) \u0026#34;Inserts a new heading, table cell or item above the current one.\u0026#34; (interactive \u0026#34;p\u0026#34;) (dotimes (_ count) (+org--insert-item \u0026#39;above))) (defun org-make-olist (arg) (interactive \u0026#34;P\u0026#34;) (let ((n (or arg 1))) (when (region-active-p) (setq n (count-lines (region-beginning) (region-end))) (goto-char (region-beginning))) (dotimes (i n) (beginning-of-line) (insert (concat (number-to-string (1+ i)) \u0026#34;. \u0026#34;)) (forward-line)))) Highlight yanked text This function describes itself so\u0026hellip;\n1 2 3 4 (defun meain/evil-yank-advice (orig-fn beg end \u0026amp;rest args) (pulse-momentary-highlight-region beg end \u0026#39;mode-line-active) (apply orig-fn beg end args)) (advice-add \u0026#39;evil-yank :around \u0026#39;meain/evil-yank-advice) Replace \u0026lsquo;-\u0026rsquo; with \u0026lsquo;•\u0026rsquo;. 1 2 3 4 5 6 7 (defun jp/org-font-setup () ;; Replace list hyphen with dot (font-lock-add-keywords \u0026#39;org-mode \u0026#39;((\u0026#34;^ *\\\\([-]\\\\) \u0026#34; (0 (prog1 () (compose-region (match-beginning 1) (match-end 1) \u0026#34;•\u0026#34;))))))) (jp/org-font-setup) Custom_id. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 ;;;; org-id (declare-function org-id-add-location \u0026#34;org\u0026#34;) (declare-function org-with-point-at \u0026#34;org\u0026#34;) (declare-function org-entry-get \u0026#34;org\u0026#34;) (declare-function org-id-new \u0026#34;org\u0026#34;) (declare-function org-entry-put \u0026#34;org\u0026#34;) ;; Copied from this article (with minor tweaks from my side): ;; https://writequit.org/articles/emacs-org-mode-generate-ids.html. (defun jp/org--id-get (\u0026amp;optional pom create prefix) \u0026#34;Get the CUSTOM_ID property of the entry at point-or-marker POM. If POM is nil, refer to the entry at point. If the entry does not have an CUSTOM_ID, the function returns nil. However, when CREATE is non nil, create a CUSTOM_ID if none is present already. PREFIX will be passed through to `org-id-new\u0026#39;. In any case, the CUSTOM_ID of the entry is returned.\u0026#34; (org-with-point-at pom (let ((id (org-entry-get nil \u0026#34;CUSTOM_ID\u0026#34;))) (cond ((and id (stringp id) (string-match \\\\S- id)) id) (create (setq id (org-id-new (concat prefix \u0026#34;h\u0026#34;))) (org-entry-put pom \u0026#34;CUSTOM_ID\u0026#34; id) (org-id-add-location id (format \u0026#34;%s\u0026#34; (buffer-file-name (buffer-base-buffer)))) id))))) (declare-function org-map-entries \u0026#34;org\u0026#34;) ;;;###autoload (defun jp/org-id-headlines () \u0026#34;Add missing CUSTOM_ID to all headlines in current file.\u0026#34; (interactive) (org-map-entries (lambda () (jp/org--id-get (point) t)))) ;;;###autoload (defun jp/org-id-headline () \u0026#34;Add missing CUSTOM_ID to headline at point.\u0026#34; (interactive) (jp/org--id-get (point) t)) Add ID\u0026rsquo;s to headers - Org roam. 1 2 3 4 5 6 7 (defun jp/org-id-store-link-for-headers () \u0026#34;Run `org-id-store-link\u0026#39; for each header in the current buffer.\u0026#34; (interactive) (save-excursion (goto-char (point-min)) (while (re-search-forward org-heading-regexp nil t) (org-id-store-link)))) Toggle org-emphasis-markers 1 2 3 4 5 6 7 8 9 10 11 12 13 14 (defun jp/org-toggle-emphasis-markers (\u0026amp;optional arg) \u0026#34;Toggle emphasis markers and display a message.\u0026#34; (interactive \u0026#34;p\u0026#34;) (let ((markers org-hide-emphasis-markers) (msg \u0026#34;\u0026#34;)) (when markers (setq-local org-hide-emphasis-markers nil) (setq msg \u0026#34;Emphasis markers are now visible.\u0026#34;)) (unless markers (setq-local org-hide-emphasis-markers t) (setq msg \u0026#34;Emphasis markers are now hidden.\u0026#34;)) (message \u0026#34;%s\u0026#34; msg) (when arg (font-lock-fontify-buffer)))) Insert Org\u0026rsquo;s files to Outlook. Export file to clipboard. 1 2 3 4 5 6 7 8 9 10 11 (defun export-org-email () \u0026#34;Export the current email org buffer and copy it to the clipboard\u0026#34; (interactive) (let ((org-export-show-temporary-export-buffer nil) (org-html-head (org-email-html-head))) (org-html-export-as-html) (with-current-buffer \u0026#34;*Org HTML Export*\u0026#34; (kill-new (buffer-string))) (message \u0026#34;HTML copied to clipboard\u0026#34;))) (global-set-key (kbd \u0026#34;C-c C-x C-e\u0026#34;) \u0026#39;export-org-email) Add some CSS to the file. 1 2 3 4 5 6 7 8 9 10 11 (defun org-email-html-head () \u0026#34;Create the header with CSS for use with email\u0026#34; (concat \u0026#34;\u0026lt;style type=\\\u0026#34;text/css\\\u0026#34;\u0026gt;\\n\u0026#34; \u0026#34;\u0026lt;!--/*--\u0026gt;\u0026lt;![CDATA[/*\u0026gt;\u0026lt;!--*/\\n\u0026#34; (with-temp-buffer (insert-file-contents \u0026#34;~/.emacs.d/src/css/org2outlook.css\u0026#34;) (buffer-string)) \u0026#34;/*]]\u0026gt;*/--\u0026gt;\\n\u0026#34; \u0026#34;\u0026lt;/style\u0026gt;\\n\u0026#34;)) Org TODO auto update. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 (defun org-todo-if-needed (state) \u0026#34;Change header state to STATE unless the current item is in STATE already.\u0026#34; (unless (string-equal (org-get-todo-state) state) (org-todo state))) (defun ct/org-summary-todo-cookie (n-done n-not-done) \u0026#34;Switch header state to DONE when all subentries are DONE, to TODO when none are DONE, and to DOING otherwise\u0026#34; (let (org-log-done org-log-states) ; turn off logging (org-todo-if-needed (cond ((= n-done 0) \u0026#34;TODO\u0026#34;) ((= n-not-done 0) \u0026#34;DONE\u0026#34;) (t \u0026#34;DOING\u0026#34;))))) (add-hook \u0026#39;org-after-todo-statistics-hook #\u0026#39;ct/org-summary-todo-cookie) (defun ct/org-summary-checkbox-cookie () \u0026#34;Switch header state to DONE when all checkboxes are ticked, to TODO when none are ticked, and to DOING otherwise\u0026#34; (let (beg end) (unless (not (org-get-todo-state)) (save-excursion (org-back-to-heading t) (setq beg (point)) (end-of-line) (setq end (point)) (goto-char beg) ;; Regex group 1: %-based cookie ;; Regex group 2 and 3: x/y cookie (if (re-search-forward \u0026#34;\\\\[\\\\([0-9]*%\\\\)\\\\]\\\\|\\\\[\\\\([0-9]*\\\\)/\\\\([0-9]*\\\\)\\\\]\u0026#34; end t) (if (match-end 1) ;; [xx%] cookie support (cond ((equal (match-string 1) \u0026#34;100%\u0026#34;) (org-todo-if-needed \u0026#34;DONE\u0026#34;)) ((equal (match-string 1) \u0026#34;0%\u0026#34;) (org-todo-if-needed \u0026#34;TODO\u0026#34;)) (t (org-todo-if-needed \u0026#34;DOING\u0026#34;))) ;; [x/y] cookie support (if (\u0026gt; (match-end 2) (match-beginning 2)) ; = if not empty (cond ((equal (match-string 2) (match-string 3)) (org-todo-if-needed \u0026#34;DONE\u0026#34;)) ((or (equal (string-trim (match-string 2)) \u0026#34;\u0026#34;) (equal (match-string 2) \u0026#34;0\u0026#34;)) (org-todo-if-needed \u0026#34;TODO\u0026#34;)) (t (org-todo-if-needed \u0026#34;DOING\u0026#34;))) (org-todo-if-needed \u0026#34;DOING\u0026#34;)))))))) (add-hook \u0026#39;org-checkbox-statistics-hook #\u0026#39;ct/org-summary-checkbox-cookie) Org-buffer-scratchpad. 1 2 3 4 5 6 7 8 9 (defun new-scratch-pad () \u0026#34;Create a new org-mode buffer for random stuff.\u0026#34; (interactive) (progn (let ((buffer (generate-new-buffer \u0026#34;Org-scratch-buffer\u0026#34;))) (switch-to-buffer buffer) (setq buffer-offer-save t) (org-mode) (olivetti-mode t)))) Toggle buffers. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 ;; Toggle *scratch* buffer. (defun toggle-scratch-buffer () \u0026#34;Toggle the *scratch* buffer\u0026#34; (interactive) (if (string= (buffer-name) \u0026#34;*scratch*\u0026#34;) (bury-buffer) (switch-to-buffer (get-buffer-create \u0026#34;*scratch*\u0026#34;)))) (defun toggle-org-buffer () \u0026#34;Toggle the Org-scratch-buffer buffer\u0026#34; (interactive) (if (equal (buffer-name (current-buffer)) \u0026#34;Org-scratch-buffer\u0026#34;) (if (one-window-p t) (switch-to-buffer (other-buffer)) (delete-window)) (if (get-buffer \u0026#34;Org-scratch-buffer\u0026#34;) (if (get-buffer-window \u0026#34;Org-scratch-buffer\u0026#34;) (progn (bury-buffer \u0026#34;Org-scratch-buffer\u0026#34;) (delete-window (get-buffer-window \u0026#34;Org-scratch-buffer\u0026#34;))) (switch-to-buffer \u0026#34;Org-scratch-buffer\u0026#34;)) (new-scratch-pad)))) ;; Toggle *eshell* buffer. (defun toggle-eshell-buffer () \u0026#34;Toggle the *eshell* buffer\u0026#34; (interactive) (if (string= (buffer-name) \u0026#34;*eshell*\u0026#34;) (bury-buffer) (switch-to-buffer (get-buffer-create \u0026#34;*eshell*\u0026#34;)))) Doc at point. 1 2 3 4 5 6 (defun my-show-doc-or-describe-symbol () \u0026#34;Show LSP UI doc if LSP is active, otherwise describe symbol at point.\u0026#34; (interactive) (if (bound-and-true-p lsp-mode) (lsp-ui-doc-glance) (describe-symbol-at-point))) Duplicate \u0026amp; move up/down lines. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 (defun duplicate-line () (interactive) (let ((line-text (thing-at-point \u0026#39;line t))) (save-excursion (move-end-of-line 1) (newline) (insert line-text))) (forward-line 1)) (defun move-line-up () (interactive) (when (not (= (line-number-at-pos) 1)) (transpose-lines 1) (forward-line -2))) (defun move-line-down () (interactive) (forward-line 1) (when (not (= (line-number-at-pos) (point-max))) (transpose-lines 1)) (forward-line -1)) Hide passwords in org files. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 ;; Define a custom face for the highlight (defface my-highlight-face \u0026#39;((t (:foreground \u0026#34;gray\u0026#34;))) ; Change \u0026#34;red\u0026#34; to your desired color \u0026#34;Face for highlighting !!word!! patterns.\u0026#34;) ;; Function to replace matched text with asterisks (defun replace-with-asterisks (limit) \u0026#34;Replace !!word!! with asterisks up to LIMIT.\u0026#34; (while (re-search-forward \u0026#34;!!\\\\(.*?\\\\)!!\u0026#34; limit t) (let* ((match (match-string 1)) (start (match-beginning 0)) (end (match-end 0)) (asterisks (make-string (length match) ?*))) (add-text-properties start end `(display ,asterisks face my-highlight-face))))) ;; Add custom keyword for font-lock in org-mode (defun my/org-mode-custom-font-lock () \u0026#34;Add custom font-lock keywords for org-mode.\u0026#34; (font-lock-add-keywords nil \u0026#39;((replace-with-asterisks)))) ;; Hook the custom font-lock configuration into org-mode (add-hook \u0026#39;org-mode-hook \u0026#39;my/org-mode-custom-font-lock) Help at point. 1 2 3 4 5 6 7 8 9 10 (defun describe-symbol-at-point () \u0026#34;Display the documentation of the symbol at point, if it exists.\u0026#34; (interactive) (let ((symbol (symbol-at-point))) (if symbol (cond ((fboundp symbol) (describe-function symbol)) ((boundp symbol) (describe-variable symbol)) (t (message \u0026#34;No documentation found for symbol at point: %s\u0026#34; symbol))) (message \u0026#34;No symbol at point\u0026#34;)))) fz-themes 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 (defun custom-jp-themes (\u0026amp;optional theme-dir) (defun custom-jp-themes (\u0026amp;optional theme-dir) \u0026#34;Return a list of custom themes from a specified directory. Search the directory for files named FOO-theme.el, and return a list of FOO symbols, excluding the \u0026#39;default\u0026#39; theme and any internal themes. If THEME-DIR is nil, it defaults to `~/.emacs.d/lisp/jp-themes/\u0026#39;.\u0026#34; (let ((suffix \u0026#34;-theme\\\\.el\\\\\u0026#39;\u0026#34;) (directory (or theme-dir \u0026#34;~/.emacs.d/lisp/jp-themes/\u0026#34;)) themes) ;; Ensure the directory exists (when (file-directory-p directory) ;; Iterate over all theme files in the directory (dolist (file (directory-files directory nil suffix)) (let ((theme (intern (substring file 0 (string-match-p suffix file))))) ;; Add to the list if it\u0026#39;s valid, and exclude Emacs built-in \u0026#34;default\u0026#34; theme (and (not (eq theme \u0026#39;default)) ;; Ensure \u0026#34;default\u0026#34; is excluded (not (memq theme themes)) ;; Avoid duplicates (push theme themes))))) (nreverse themes))) (defcustom fz-themes nil \u0026#34;List of themes (symbols or regexps) to be presented for selection. nil shows all `custom-available-themes\u0026#39;.\u0026#34; :type \u0026#39;(repeat (choice symbol regexp))) (defun fz-theme (theme) \u0026#34;Disable current themes and enable THEME from `fz-themes`. The command supports previewing the currently selected theme.\u0026#34; (interactive (list (let* ((regexp (consult--regexp-filter (mapcar (lambda (x) (if (stringp x) x (format \u0026#34;\\\\`%s\\\\\u0026#39;\u0026#34; x))) fz-themes))) (avail-themes (seq-filter (lambda (x) (string-match-p regexp (symbol-name x))) (custom-jp-themes))) ;; Only use themes from custom-jp-themes (saved-theme (car custom-enabled-themes))) (consult--read (mapcar #\u0026#39;symbol-name avail-themes) :prompt \u0026#34;Theme: \u0026#34; :require-match t :category \u0026#39;theme :history \u0026#39;consult--theme-history :lookup (lambda (selected \u0026amp;rest _) (setq selected (and selected (intern-soft selected))) (or (and selected (car (memq selected avail-themes))) saved-theme)) :state (lambda (action theme) (pcase action (\u0026#39;return (fz-theme (or theme saved-theme))) ((and \u0026#39;preview (guard theme)) (fz-theme theme)))) :default (symbol-name (or saved-theme \u0026#39;default)))))) (when (eq theme \u0026#39;default) (setq theme nil)) (unless (eq theme (car custom-enabled-themes)) (mapc #\u0026#39;disable-theme custom-enabled-themes) (when theme (if (custom-theme-p theme) (enable-theme theme) (load-theme theme :no-confirm))))) Custom functions. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 ;; Open files in the lisp folder (require \u0026#39;find-lisp) (defun open-lisp-and-org-files () \u0026#34;Open a Lisp or Org file from ~/.emacs.d/lisp directory, including subfolders.\u0026#34; (interactive) (let* ((directory \u0026#34;~/.emacs.d/lisp\u0026#34;) (el-files (find-lisp-find-files directory \u0026#34;.*\\\\.el$\u0026#34;)) (org-files (find-lisp-find-files directory \u0026#34;.*\\\\.org$\u0026#34;)) (all-files (append el-files org-files)) (file (completing-read \u0026#34;Select file: \u0026#34; all-files nil t))) (find-file file))) ;; Follow urls in the buffer (defun list-and-open-url-in-buffer () \u0026#34;List all URLs in the current buffer, display them in the minibuffer, and open a selected URL in the browser.\u0026#34; (interactive) (let (urls) (save-excursion (goto-char (point-min)) (while (re-search-forward \u0026#34;\\\\(http\\\\|https\\\\|ftp\\\\|file\\\\|mailto\\\\):[^ \\t\\n]+\u0026#34; nil t) (push (match-string 0) urls))) (if urls (let ((url (completing-read \u0026#34;Select URL to open: \u0026#34; (reverse urls) nil t))) (browse-url url)) (message \u0026#34;No URLs found in the buffer.\u0026#34;)))) ;; Export org files to pdf using tectonic (defun org-export-to-latex-and-compile-with-tectonic () \u0026#34;Export the current Org file to LaTeX, then compile with tectonic using shell-escape.\u0026#34; (interactive) (let* ((org-file (buffer-file-name)) (tex-file (concat (file-name-sans-extension org-file) \u0026#34;.tex\u0026#34;)) (tectonic-command (concat \u0026#34;tectonic -Z shell-escape \u0026#34; tex-file))) ;; Export Org file to LaTeX (org-latex-export-to-latex) ;; Run tectonic command in a temporary buffer to avoid displaying the output (with-temp-buffer (shell-command tectonic-command (current-buffer))) (message \u0026#34;Compiled %s to PDF with Tectonic.\u0026#34; tex-file))) (global-set-key (kbd \u0026#34;C-c e l\u0026#34;) \u0026#39;org-export-to-latex-and-compile-with-tectonic) ;; Update my web-page (defun publish-my-blog () \u0026#34;Export all subtrees with Hugo, then run the publish blog script within Emacs and display a success message in the minibuffer.\u0026#34; (interactive) (let ((commit-msg (read-string \u0026#34;Enter commit message: \u0026#34;))) ;; Export all subtrees with Hugo (org-hugo-export-wim-to-md :all-subtrees) ;; Run the publish script (let ((process (start-process-shell-command \u0026#34;publish-blog\u0026#34; ; Process name \u0026#34;*publish-blog-output*\u0026#34; ; Output buffer (format \u0026#34;~/webdev/jpachecoxyz.github.io/hugo/publish.sh \\\u0026#34;%s\\\u0026#34;\u0026#34; commit-msg)))) ; Run the script with the commit message ;; Set up the process sentinel to check the process status (set-process-sentinel process (lambda (process event) (when (string= event \u0026#34;finished\\n\u0026#34;) (message \u0026#34;jpacheco.xyz was correctly updated!\u0026#34;))))))) (global-set-key (kbd \u0026#34;C-c u b\u0026#34;) \u0026#39;publish-my-blog) ;; Search roam (defun jp/search-roam () \u0026#34;Run consult-ripgrep on the org roam directory\u0026#34; (interactive) (consult-ripgrep org-roam-directory nil)) (global-set-key (kbd \u0026#34;C-c n s\u0026#34;) \u0026#39;jp/search-roam) (defun jp/yt-shorts-timer () (interactive) (org-timer-set-timer \u0026#34;55s\u0026#34;)) (global-set-key (kbd \u0026#34;\u0026lt;f4\u0026gt;\u0026#34;) \u0026#39;jp/yt-shorts-timer) Linux Python Avoid SSL verification when installing packages through pip. I have some issues with the firewall in one of my jobs, so in order to be able to install python packages through pip we need to skip the SSL verification with the following flags.\n1 pip install --no-cache-dir --trusted-host pypi.org --trusted-host pypi.python.org --trusted-host files.pythonhosted.org \u0026lt;program\u0026gt; Robots Windows Change IP address within terminal. This cmd script prompt for an IP to b changed in the computer. Must run as root/administrator.\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 @echo off setlocal rem Prompt the user for new IP address set /p newIP=\u0026#34;Enter the new IP address: \u0026#34; set \u0026#34;newSubnetMask=255.255.255.0\u0026#34; rem Set the new IP address while keeping existing subnet mask and gateway netsh interface ipv4 set address name=\u0026#34;Ethernet\u0026#34; static %newIP% %newSubnetMask% rem Display the new IP configuration if %errorlevel% equ 0 ( echo IP address changed successfully. ) else ( echo Failed to change IP address. Please make sure you have administrative privileges. ) endlocal ","permalink":"//localhost:1313/wiki/","summary":"\u003ch2 id=\"emacs\"\u003eEmacs\u003c/h2\u003e\n\u003ch3 id=\"doom-insert-item-dot\"\u003eDoom Insert item.\u003c/h3\u003e\n\u003cp\u003eThis script wast taken from \u003cem\u003edoomemacs\u003c/em\u003e, it basically insert a item such a heading, subheading, checkbox, etc. based on the item above.\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cdiv class=\"chroma\"\u003e\n\u003ctable class=\"lntable\"\u003e\u003ctr\u003e\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode\u003e\u003cspan class=\"lnt\"\u003e  1\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e  2\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e  3\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e  4\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e  5\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e  6\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e  7\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e  8\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e  9\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 10\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 11\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 12\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 13\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 14\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 15\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 16\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 17\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 18\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 19\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 20\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 21\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 22\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 23\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 24\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 25\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 26\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 27\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 28\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 29\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 30\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 31\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 32\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 33\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 34\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 35\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 36\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 37\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 38\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 39\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 40\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 41\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 42\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 43\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 44\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 45\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 46\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 47\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 48\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 49\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 50\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 51\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 52\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 53\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 54\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 55\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 56\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 57\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 58\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 59\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 60\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 61\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 62\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 63\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 64\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 65\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 66\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 67\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 68\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 69\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 70\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 71\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 72\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 73\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 74\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 75\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 76\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 77\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 78\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 79\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 80\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 81\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 82\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 83\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 84\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 85\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 86\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 87\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 88\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 89\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 90\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 91\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 92\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 93\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 94\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 95\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 96\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 97\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 98\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e 99\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e100\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e101\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e102\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e103\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e104\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e105\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e106\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e107\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e108\n\u003c/span\u003e\u003cspan class=\"lnt\"\u003e109\n\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\n\u003ctd class=\"lntd\"\u003e\n\u003cpre tabindex=\"0\" class=\"chroma\"\u003e\u003ccode class=\"language-emacs-lisp\" data-lang=\"emacs-lisp\"\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e;;; javier_pacheco utilities.el --- Some useful utilities  -*- lexical-binding: t; -*-\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003edefun\u003c/span\u003e \u003cspan class=\"nv\"\u003e+org--insert-item\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003edirection\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elet\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nv\"\u003econtext\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-element-lineage\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                  \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-element-context\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                  \u003cspan class=\"o\"\u003e\u0026#39;\u003c/span\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003etable\u003c/span\u003e \u003cspan class=\"nv\"\u003etable-row\u003c/span\u003e \u003cspan class=\"nv\"\u003eheadline\u003c/span\u003e \u003cspan class=\"nv\"\u003einlinetask\u003c/span\u003e \u003cspan class=\"nv\"\u003eitem\u003c/span\u003e \u003cspan class=\"nv\"\u003eplain-list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                  \u003cspan class=\"no\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003epcase\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-element-type\u003c/span\u003e \u003cspan class=\"nv\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"c1\"\u003e;; Add a new list item (carrying over checkboxes if necessary)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nb\"\u003eor\u003c/span\u003e \u003cspan class=\"o\"\u003e`\u003c/span\u003e\u003cspan class=\"nv\"\u003eitem\u003c/span\u003e \u003cspan class=\"o\"\u003e`\u003c/span\u003e\u003cspan class=\"nv\"\u003eplain-list\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elet\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nv\"\u003eorig-point\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003epoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"c1\"\u003e;; Position determines where org-insert-todo-heading and `org-insert-item\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"c1\"\u003e;; insert the new list item.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eif\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eeq\u003c/span\u003e \u003cspan class=\"nv\"\u003edirection\u003c/span\u003e \u003cspan class=\"ss\"\u003e\u0026#39;above\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-beginning-of-item\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e           \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eend-of-line\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elet*\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nv\"\u003ectx-item?\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eeq\u003c/span\u003e \u003cspan class=\"ss\"\u003e\u0026#39;item\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-element-type\u003c/span\u003e \u003cspan class=\"nv\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ectx-cb\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-element-property\u003c/span\u003e \u003cspan class=\"nb\"\u003e:contents-begin\u003c/span\u003e \u003cspan class=\"nv\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"c1\"\u003e;; Hack to handle edge case where the point is at the\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"c1\"\u003e;; beginning of the first item\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ebeginning-of-list?\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eand\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003enot\u003c/span\u003e \u003cspan class=\"nv\"\u003ectx-item?\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                         \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003ectx-cb\u003c/span\u003e \u003cspan class=\"nv\"\u003eorig-point\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eitem-context\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eif\u003c/span\u003e \u003cspan class=\"nv\"\u003ebeginning-of-list?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                  \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-element-context\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                \u003cspan class=\"nv\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"c1\"\u003e;; Horrible hack to handle edge case where the\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"c1\"\u003e;; line of the bullet is empty\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eictx-cb\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-element-property\u003c/span\u003e \u003cspan class=\"nb\"\u003e:contents-begin\u003c/span\u003e \u003cspan class=\"nv\"\u003eitem-context\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eempty?\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eand\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eeq\u003c/span\u003e \u003cspan class=\"nv\"\u003edirection\u003c/span\u003e \u003cspan class=\"ss\"\u003e\u0026#39;below\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                             \u003cspan class=\"c1\"\u003e;; in case contents-begin is nil, or contents-begin\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                             \u003cspan class=\"c1\"\u003e;; equals the position end of the line, the item is\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                             \u003cspan class=\"c1\"\u003e;; empty\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                             \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003enot\u003c/span\u003e \u003cspan class=\"nv\"\u003eictx-cb\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                 \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003e=\u003c/span\u003e \u003cspan class=\"nv\"\u003eictx-cb\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                                    \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003e1+\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003epoint\u003c/span\u003e\u003cspan class=\"p\"\u003e))))))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003epre-insert-point\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003epoint\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e           \u003cspan class=\"c1\"\u003e;; Insert dummy content, so that `org-insert-item\u0026#39;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e           \u003cspan class=\"c1\"\u003e;; inserts content below this item\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e           \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003ewhen\u003c/span\u003e \u003cspan class=\"nv\"\u003eempty?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003einsert\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e           \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-insert-item\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-element-property\u003c/span\u003e \u003cspan class=\"nb\"\u003e:checkbox\u003c/span\u003e \u003cspan class=\"nv\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e           \u003cspan class=\"c1\"\u003e;; Remove dummy content\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e           \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003ewhen\u003c/span\u003e \u003cspan class=\"nv\"\u003eempty?\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e             \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003edelete-region\u003c/span\u003e \u003cspan class=\"nv\"\u003epre-insert-point\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003e1+\u003c/span\u003e \u003cspan class=\"nv\"\u003epre-insert-point\u003c/span\u003e\u003cspan class=\"p\"\u003e))))))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"c1\"\u003e;; Add a new table row\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nb\"\u003eor\u003c/span\u003e \u003cspan class=\"o\"\u003e`\u003c/span\u003e\u003cspan class=\"nv\"\u003etable\u003c/span\u003e \u003cspan class=\"o\"\u003e`\u003c/span\u003e\u003cspan class=\"nv\"\u003etable-row\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003epcase\u003c/span\u003e \u003cspan class=\"nv\"\u003edirection\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e\u0026#39;below\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003esave-excursion\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-table-insert-row\u003c/span\u003e \u003cspan class=\"no\"\u003et\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                 \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-table-next-row\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e\u0026#39;above\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003esave-excursion\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-shiftmetadown\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                 \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e+org/table-previous-row\u003c/span\u003e\u003cspan class=\"p\"\u003e))))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"c1\"\u003e;; Otherwise, add a new heading, carrying over any todo state, if\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"c1\"\u003e;; necessary.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e_\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e       \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elet\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nv\"\u003elevel\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eor\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-current-level\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"c1\"\u003e;; I intentionally avoid `org-insert-heading\u0026#39; and the like because they\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"c1\"\u003e;; impose unpredictable whitespace rules depending on the cursor\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"c1\"\u003e;; position. It\u0026#39;s simpler to express this command\u0026#39;s responsibility at a\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"c1\"\u003e;; lower level than work around all the quirks in org\u0026#39;s API.\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003epcase\u003c/span\u003e \u003cspan class=\"nv\"\u003edirection\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e           \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e`\u003c/span\u003e\u003cspan class=\"nv\"\u003ebelow\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elet\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-insert-heading-respect-content\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003egoto-char\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eline-end-position\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-end-of-subtree\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e              \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003einsert\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\\n\u0026#34;\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003emake-string\u003c/span\u003e \u003cspan class=\"nv\"\u003elevel\u003c/span\u003e \u003cspan class=\"sc\"\u003e?*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e           \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"o\"\u003e`\u003c/span\u003e\u003cspan class=\"nv\"\u003eabove\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-back-to-heading\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003einsert\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003emake-string\u003c/span\u003e \u003cspan class=\"nv\"\u003elevel\u003c/span\u003e \u003cspan class=\"sc\"\u003e?*\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34; \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003esave-excursion\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003einsert\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;\\n\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003erun-hooks\u003c/span\u003e \u003cspan class=\"ss\"\u003e\u0026#39;org-insert-heading-hook\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e         \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ewhen-let*\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nv\"\u003etodo-keyword\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-element-property\u003c/span\u003e \u003cspan class=\"nb\"\u003e:todo-keyword\u003c/span\u003e \u003cspan class=\"nv\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                     \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003etodo-type\u003c/span\u003e    \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-element-property\u003c/span\u003e \u003cspan class=\"nb\"\u003e:todo-type\u003c/span\u003e \u003cspan class=\"nv\"\u003econtext\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e           \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-todo\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e            \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003econd\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nf\"\u003eeq\u003c/span\u003e \u003cspan class=\"nv\"\u003etodo-type\u003c/span\u003e \u003cspan class=\"ss\"\u003e\u0026#39;done\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                   \u003cspan class=\"c1\"\u003e;; Doesn\u0026#39;t make sense to create more \u0026#34;DONE\u0026#34; headings\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                   \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003ecar\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e+org-get-todo-keywords-for\u003c/span\u003e \u003cspan class=\"nv\"\u003etodo-keyword\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                  \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003etodo-keyword\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                  \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"ss\"\u003e\u0026#39;todo\u003c/span\u003e\u003cspan class=\"p\"\u003e)))))))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003ewhen\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-invisible-p\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eorg-show-hidden-entry\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003ewhen\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eand\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ebound-and-true-p\u003c/span\u003e \u003cspan class=\"nv\"\u003eevil-local-mode\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e               \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003enot\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eevil-emacs-state-p\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eevil-insert\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e))))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e;;;###autoload\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003edefun\u003c/span\u003e \u003cspan class=\"nv\"\u003e+org/insert-item-below\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"s\"\u003e\u0026#34;Inserts a new heading, table cell or item below the current one.\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003einteractive\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;p\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003edotimes\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e_\u003c/span\u003e \u003cspan class=\"nv\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e+org--insert-item\u003c/span\u003e \u003cspan class=\"ss\"\u003e\u0026#39;below\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"c1\"\u003e;;;###autoload\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003edefun\u003c/span\u003e \u003cspan class=\"nv\"\u003e+org/insert-item-above\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"s\"\u003e\u0026#34;Inserts a new heading, table cell or item above the current one.\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003einteractive\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;p\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003edotimes\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e_\u003c/span\u003e \u003cspan class=\"nv\"\u003ecount\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003e+org--insert-item\u003c/span\u003e \u003cspan class=\"ss\"\u003e\u0026#39;above\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e\u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003edefun\u003c/span\u003e \u003cspan class=\"nv\"\u003eorg-make-olist\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003earg\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003einteractive\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;P\u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e  \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003elet\u003c/span\u003e \u003cspan class=\"p\"\u003e((\u003c/span\u003e\u003cspan class=\"nv\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003eor\u003c/span\u003e \u003cspan class=\"nv\"\u003earg\u003c/span\u003e \u003cspan class=\"mi\"\u003e1\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003ewhen\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003eregion-active-p\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003esetq\u003c/span\u003e \u003cspan class=\"nv\"\u003en\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ecount-lines\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eregion-beginning\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e                           \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eregion-end\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003egoto-char\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eregion-beginning\u003c/span\u003e\u003cspan class=\"p\"\u003e)))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e    \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nb\"\u003edotimes\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nv\"\u003ei\u003c/span\u003e \u003cspan class=\"nv\"\u003en\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003ebeginning-of-line\u003c/span\u003e\u003cspan class=\"p\"\u003e)\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003einsert\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003econcat\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003enumber-to-string\u003c/span\u003e \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003e1+\u003c/span\u003e \u003cspan class=\"nv\"\u003ei\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e \u003cspan class=\"s\"\u003e\u0026#34;. \u0026#34;\u003c/span\u003e\u003cspan class=\"p\"\u003e))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan class=\"line\"\u003e\u003cspan class=\"cl\"\u003e      \u003cspan class=\"p\"\u003e(\u003c/span\u003e\u003cspan class=\"nf\"\u003eforward-line\u003c/span\u003e\u003cspan class=\"p\"\u003e))))\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/td\u003e\u003c/tr\u003e\u003c/table\u003e\n\u003c/div\u003e\n\u003c/div\u003e\u003ch3 id=\"highlight-yanked-text\"\u003eHighlight yanked text\u003c/h3\u003e\n\u003cp\u003eThis function describes itself so\u0026hellip;\u003c/p\u003e","title":"Wiki"},{"content":"Greetings! I\u0026rsquo;m Javier Pacheco, a dedicated Industrial Maintenance Engineer with a rich academic foundation from the prestigious UTM in H. Matamoros Tamaulipas,Mexico. Over the span of 12 fruitful years, I\u0026rsquo;ve been an integral part of the automotive industry, contributing my expertise in a multitude of critical domains.\nMy journey began with a profound fascination for the intricate mechanisms that power manufacturing and industrial processes. At UTM, I honed my skills, diving deep into the realms of engineering, automation, and problem-solving. This foundation paved the way for my foray into the dynamic world of industrial maintenance.\nWithin the automotive landscape, I\u0026rsquo;ve carved my niche in handling Programmable Logic Controllers (PLCs), robotics, and programming, orchestrating seamless operations and bolstering efficiency. My prowess extends beyond conventional boundaries—I harness the power of CAD software to craft intricate designs that harmonize innovation with practicality.\nProgramming is not just a skill set; it\u0026rsquo;s an intrinsic part of my identity. The allure of languages such as Python, C, and Lisp captivates me, compelling me to unravel their complexities and harness their capabilities to engineer groundbreaking solutions.\nMy career is a testament to my unwavering commitment to innovation and continuous learning. Each challenge fuels my passion, propelling me to explore new horizons and revolutionize conventional practices. I thrive in environments that demand ingenuity and embrace the convergence of technology and creativity.\nBeyond the technical facets, I am deeply invested in collaborative endeavors, fostering a culture of knowledge exchange and mentor-ship. I firmly believe that sharing insights and empowering others amplifies the impact of technological advancements.\nSee my whole information here.\nWhere to Find Me GitHub. LinkedIn. Projects that I\u0026rsquo;m currently develop. Void linux installation script. Noobemacs, a minimal emacs configuration with evil mode. pymetrics, a python gui app to manage maintenance logs. ","permalink":"//localhost:1313/about/","summary":"\u003cp\u003eGreetings! I\u0026rsquo;m Javier Pacheco, a dedicated Industrial Maintenance Engineer with a rich academic foundation from the prestigious \u003cstrong\u003eUTM\u003c/strong\u003e in \u003cstrong\u003eH. Matamoros Tamaulipas,Mexico\u003c/strong\u003e. Over the span of 12 fruitful years, I\u0026rsquo;ve been an integral part of the automotive industry, contributing my expertise in a multitude of critical domains.\u003c/p\u003e\n\u003cp\u003eMy journey began with a profound fascination for the intricate mechanisms that power manufacturing and industrial processes. At UTM, I honed my skills, diving deep into the realms of engineering, automation, and problem-solving. This foundation paved the way for my foray into the dynamic world of industrial maintenance.\u003c/p\u003e","title":"About me"}]